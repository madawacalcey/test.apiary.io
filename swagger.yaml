swagger: '2.0'
info:
  version: v1
  title: Webclient API
  description: |
    This an API for accessing data from imSMART CMS. 
    The new Webclient use this API for its operation.
    All the endpoints of this API requier to be HTTPS. 
    The base URL for all requests is https://vertical-subdomain.comparenetworks.com/webclientapi/api/.
    
    All responses are tailored towards the authentication user.
  contact:
    email: imsmart@comparenetworks.com
host: imsmart-staging.comparenetworks.com
basePath: /webclientapi
schemes:
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      To access the API, a valid token should be passed to all endpoints that requires authentication. This is passed in the 'Authorization' header.
      A valid token is generated by the API and returned in the response when /auth/imsmart endpoint is called with valid user credentials.
      The following syntax must be used in the 'Authorization' header.
      
      "Authorization: Bearer xxxxxx.yyyyyyy.zzzzzz"
      
paths:
  '/auth/imsmart':
    post:
      summary: Authenticate User
      description: Authenticates the user and returns an authorization token to access the API. This token is required to access all authenticated endpoints. Returned authorization token will be empty, if provided credential(s) are wrong.
      tags:
        - Auth
      operationId: AuthenticateUser
      consumes:
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: authCode
          description: The authentication details to validate the user.
          in: body
          required: true
          schema:
            $ref: '#/definitions/OAuthCode'
      responses:
        '200':
          description: The successful response.
          schema:
            $ref: '#/definitions/AuthDto'
      deprecated: false
  '/api/{version}/Items/{id}':
    get:
      summary: Get Item
      description: Gets an item for the provided item id related to the authorized user. Responsed items will not be retriavable that are either inactive, hidden, expired, set as tablet only, shortcut, external, or isReady false.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetItem
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          description: The id of the item to be retrieved. Id should be greater than 0.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ItemDto'
        '404':
          description: When the provided id does not relate to an item, the user or if the item is hidden or only viewable from a tablet device or expired.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/{parentId}/Children':
    get:
      summary: Get Child Items
      description: Gets the child items for the provided item id. Responsed Item may not include inactive, hidden or expired items. If the item type is an asset, Response may not included tablet only, unready, external or shortcut assets. Responsed List of child items of the specified parent item id will be empty result if the parent id is invalid.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetChildItems
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: parentId
          description: The id of the parent item which is associated to the authorized user. Value should be greater than 0.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            type: array
            items:
              $ref: '#/definitions/ItemDto'
            minItems: 2
      deprecated: false
  '/api/{version}/Items/{itemId}/ItemLinks':
    get:
      summary: Get Image Links
      description: Gets the image links for the item specified by the item id. Image links of the item specified by the item id or an empty result if the item id is invalid.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetItemLinks
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: itemId
          description: The id of the item whose image links are to be retrieved, id value should be greater than 0.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ItemLinkDto'
      deprecated: false
  '/api/{version}/Items/{itemId}/ItemAccessibility':
    get:
      summary: Get Item Accessibility
      description: Gets the accessibility status of the item, item should not be hidden or tablet only. Response will True if the user is allowed to access the given item, otherwise False.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetItemAccessibility
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: itemId
          description: The id of the item whose accessibility is required, id value should be greater than 0.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccessibilityStatus'
      deprecated: false
  '/api/{version}/Items/{itemId}/CreateCrocodocSession':
    get:
      summary: Get Crocodoc Session
      description: |
        Gets a created Crocodoc session for the item which match with the provided item id.
        A session will only be created if the status is either PROCESSING or DONE. 
        A crocodoc document status may change to ERROR from PROCESSING in the event that processing fails.
        The UUID denotes the unique crocodoc id.
        The Error is populated only when the Status is ERROR.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: CreateCrocodocSession
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: itemId
          description: The item id for the Crocodoc session, id value should be greater than 0.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ItemCrocodocSessionDto'
        '400':
          description: Thrown if the item file type is not supported.
          schema:
            $ref: '#/definitions/ErrorDto'
        '204':
          description: Returned if the item has no cotent, or if the crocodoc encountered an error when processing the file.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: Returned if the item is not found, inactive, not ready, hidden, tablet only or expired.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/{itemId}/GetAssetEmailLink':
    get:
      summary: Get Download URL
      description: |
          Gets the Download URL for an item specified by the item id.
          The AssetLink is only populated if the asset is sharable and if emailing is allowed.
          ExpiryDate is populated only if the AssetLink is populated.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetAssetEmailLink
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: itemId
          description: The item id whose download URL is required, id value should be greater than 0.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ItemDownloadLinkDto'
        '404':
          description: Returned if the item is not found, inactive, not ready, hidden, tablet only or expired.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/FilterCategories':
    post:
      summary: Get Item Filter Categories
      description:
          Gets the item filter categories for the segment(s) specified by the segment id(s). If the segment id(s) are not specified,it will return all the filter categories associated to the user items. Filter categories will not be retrievable for items that are either inactive, hidden, expired, set as tablet only, shortcut, external, or isReady false.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetItemFilterCategories
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
      parameters:
        - name: segmentId
          description: The segment ids of the segment(s) for which the item filter categories are required, this parmeter can also be an empty list.
          in: body
          required: true
          schema:
            $ref: '#/definitions/SegmentIdDto'
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ItemFilterCategoryDto'
        '400':
          description: Thrown if the parameters are invalid or if segment(s) are not associated to the authorized user.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/Search':
    post:
      summary: Search
      description: |
        Performs a search based on the provided search criteria on the items associated to the current user. Items can be either Segments, 
        Folders or Assets. Search will be performed on the given Item(s) and its child Items(s).

        Response items will not be retrievable that are either inactive, hidden, expired, set as tablet only, shortcut, external, or isReady false. Additionally,  for the  featured folder or assets associated to the featured folder will not be retrievable.

        In the request must have pageSize and StartIndex and  ItemIds or/and FileTypes or/and Tags or/and SearchText.
        SortBy and SortOrder are optional parameters
       
        Total denotes the total number of results according search parameters.
        
        Returns collection of items associated to the authorized user that matched to the search criteria.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: Search
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: filterOptions
          description: The filtering criteria.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemSearchDto'
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/WebClientItemDto'
        '400':
          description: Thrown if the parameters are invalid or if one of the required parameters are not provided or if items are not associated to the authorized user.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/Library':
    post:
      summary: Library
      description: |
        Gets items matching the filter criteria from the items associated to the authorized user.

        Retrives items for the given filters with paginated. Response items will not be retrievable that are either inactive, hidden, expired, set as tablet only, shortcut, external, or isReady false. Additionally,  for the  featured folder or assets associated to the featured folder will not be retrievable.
        
        In the request must have pageSize and StartIndex and ShowFolder property and ItemIds or/and FileTypes or/and Tags. SortBy and SortOrder are optional parameters. When ShowFolder True it filter only on the first level items related to all user associated segments. When it false, filters on all Hierarchy related to parent.

        Total denotes the total number of results for the filter parameters.
        
        Returns collection of items matched to the user filter criteria.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: Library
      consumes:
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: filterOptions
          description: The filter criteria to be filtered.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemFiltersDto'
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/WebClientItemDto'
        '400':
          description: Thrown if the parameters are invalid or if segments are not associated to the authorized user.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/{segmentId}/SegmentItems':
    get:
      summary: Get Segment Items
      description: |
        Retrive the child items for the given segment. The segment should be associated to the authorized user. User need to specify the single segment id in each time. 
        
        Responsed items will not be retrievable that are either inactive, hidden, expired, set as tablet only, shortcut, external, or isReady false. Additionally,  for the  featured folder or assets associated to the featured folder will not be retrievable.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetSegmentItems
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: segmentId
          description: The segment id whose child items need to be retrieved. The id should be integer and greater than 0.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ItemRelatedDto'
        '403':
          description: Thrown if the authorized user has no access to the specified segment or invalied segment.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/RetrieveShareLinkForAssets':
    get:
      summary: Gets the share links for assets
      description: Gets the share links for provided assets Ids. Response may not include asset links which for inactive, hidden tablet only or is not ready assets. Returns List of share link for given items.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: RetrieveShareLinkForAssets
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: itemIds
          description: The item Id list and cannot be empty or null. Item ids shouldbe integer and greater than 0
          in: query
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ItemShareLinkCollectionDto'
        '404':
          description: Thrown if the specified item ids don't belong to the user.
          schema:
            $ref: '#/definitions/ErrorDto'
        '400':
          description: Thrown if the parameter is invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/RetrieveLinksForItems':
    get:
      summary: Gets the links for items
      description: Get item links of the specified items. Response may not include links for inactive, hidden or expired items. If the response item type is an asset, response will not include tablet only or is not ready assets.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: RetrieveLinksForItems
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: itemIds
          description: The item Id list and cannot be empty or null. Item ids should be integer and greater than 0
          in: query
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ItemLinkCollectionDto'
        '404':
          description: Thrown if the specified item ids don't belong to the user.
          schema:
            $ref: '#/definitions/ErrorDto'
        '400':
          description: Thrown if the parameter is invalid or request item count and filtered user related item count not equal..
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/ItemUserData':
    get:
      summary: Get Item User Data
      description: Gets a collection of all public and authorized user specific private item user data. An empty collection will be returned if no item user data records are available/relevant for the authenticated user.
      security:
        - Bearer: []
      tags:
        - ItemUserData
      operationId: GetItemUserData
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The successful response.
          schema:
            $ref: '#/definitions/ItemCollection'
      deprecated: false
  '/api/{version}/Organization':
    get:
      summary: Get Organization
      description: Gets the details of the current organization. This endpoint doesn't need authorization.
      tags:
        - Organization
      operationId: GetOrganizationDetails
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The successful response.
          schema:
            $ref: '#/definitions/OrganizationDetails'
      deprecated: false
  '/api/{version}/Organization/Settings':
    post:
      summary: Gets Organization Settings
      description: |
        Gets the api specific and shared CMS specific organization setting values(localized) of the current organization
        for the provided keys. Default language will be used if no region is assigned to the authorized user
        or localizations disabled for the current organization.
      security:
        - Bearer: []
      tags:
        - Organization
      operationId: GetOrganizationSettings
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: organizationSettingsKeys
          description: The list of organization setting keys to be retrieved from the current organization.
            
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganizationSettingsRequestDto'
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The successful response.
          schema:
            type: array
            items:
              type: string
              enum: ['Organization.Setting_A : Value_A', 'Organization.Setting_B : Value_B', 'Organization.Setting_C : Value_C']
            uniqueItems: true
        '400':
          description: |
            Thrown if the requested organization setting keys list is empty or one of provided setting name is invalid
            or a CMS specific setting which isn't shared.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Segments':
    get:
      summary: Get Segments
      description: Retrieves the segments associated to the authorized user. An empty list is returned if no segments associated to the authorized user.
      security:
        - Bearer: []
      tags:
        - Segments
      operationId: GetSegments
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          in: header
          required: true
      responses:
        '200':
          description: The successful response.
          schema:
            type: array
            items:
              $ref: '#/definitions/ItemDto'
      deprecated: false
  '/api/{version}/Groups':
    post:
      summary: Create My Group
      description: |
        Creates a new group of type 'My group' which will be used to organize assets later on.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: CreateGroup
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupData
          description: |
            The object containing the group name and the client updated time stamp to create a new group.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupDto'
        - name: Authorization
          type: string
          in: header
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          required: true
      responses:
        '201':
          description: Sucessfully created.
          schema:
            $ref: '#/definitions/MyGroupResponseDto'
        '400':
          description: |
            Malformed request body, empty value for group name or an invalid timestamp 
            which is less than zero or greater than the current date time 
            would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    get:
      summary: Retrieve Requested Groups
      description: |
        This endpoint retrieves the all the matching groups which is owned by or shared to the authorized user
        (My Group = 0, Shared Group = 2, My Shared = 3) excluding the automatically created group types (Quick Group = 4, Favorite Group = 1)
        for the requested types with pagination. Logged user needs specify the expected group types in their numeric
        representaion seperated by commas along with the pagination parameters as query a string. Not specifying the group types
        will retrieve all the group types mentioned above.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetGroupsByType
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupTypes
          description: |
            Types of groups to be retrieved as a string separated by commas.
          in: query
          required: false
          type: string
        - name: DisablePaginate
          description: |
            Determines whether the response is paginated or not, the value must be either 1 or 0 if specified.
            Setting its value to 1 will disable paginate and return all the groups associated to the authorized user.
            Default value of this parameter is 0. 'offset' and the 'limit' parameters are effective only when the value
            of this parameter is 0.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: offset
          description: |
            Number of records to be skipped from the starting index of the results.
            For instance, setting its value to 1 will skip the first element of the result.
            Default value of this parameter is 0.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: limit
          description: |
            Maximum number of records to be retrieved. Default value of this parameter is 20.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 100
          minimum: 1
        - name: Authorization
          type: string
          in: header
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          required: true
      responses:
        '200':
          description: Requested group information.
          schema:
            $ref: '#/definitions/WebClientGroupDto'
        '400':
          description: |
            Malformed query parameters such as non numeric values for pagination,
            group types, invalid group types or empty strings would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: |
            Not having any groups associated to the authorized user would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}':
    get:
      summary: Get Group
      description: |
        Retrieves the matching group for the provided group unique id.
        Only a group which is associated to the authorized user (My Group, Shared Group, My Shared Group, Quick group, Favorite group)
        can be retrieved by this endpoint.  
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetGroup
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            The group unique id of the group to be retrieved.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '404':
          description: |
            Sending malformed group unique id, invalid group unique id or a group unique id of a group 
            which is not associated to the authorized user would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    put:
      summary: Edit Group
      description: |
        This endpoint basically modifies the group name of the matching group for the 
        provided group unique id which is owned by the authorized user (My Groups, Shared Groups).
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: EditGroup
      consumes:
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            The group unique id of the group to be modified.
          in: path
          required: true
          type: string
        - name: groupData
          description: |
            The object containing the group name and client updated timestamp to modify the group.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupDto'
        - name: Authorization
          type: string
          in: header
          required: true
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
      responses:
        '200':
          description: Successfully updated.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: |
            Malformed request body, malformed group unique id, invalid group unique id, empty value for group name or an invalid timestamp 
            which is less than zero or greater than the current date time 
            would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: |
            Failure to find a matching group or not having sufficient permissions 
            to interact with 'Shared' group type would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    delete:
      summary: Delete Group
      description: |
        Deletes the matching group for the provided group unique id.
        Only a group which is owned by or shared to the authorized user (My Group, Shared Group, Shared My Group) excluding
        the group types automatically created for the user such as 'Quick group' or 'Favorite group'.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: DeleteGroup
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            The group unique id of the group to be deleted.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          required: true
      responses:
        '200':
          description: Successfully deleted.
          schema:
            $ref: '#/definitions/successMesage'
        '404':
          description: |
            Malformed group unique id, an invalid group unique id or 
            a group unique id of a group which is not owned by or shared to the authorized user
            would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}/Items':
    get:
      summary: Get Group Items
      description: |
        Retrieves items associated to the matching group for the 
        provided group unique id, which is associated to the authorized user
        (My Group, Shared Group, Shared My Group, Favorite Group, Quick Group) with pagination. 
        Endpoint accepts a group unique id and optional query string parameters for pagination.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetGroupItems
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            The group unique id of the group whose associated items to be retrieved.
          in: path
          required: true
          type: string
        - name: DisablePaginate
          description: |
            Determines whether the response is paginated or not, the value must be either 1 or 0 if specified.
            Setting its value to 1 will disable paginate and return all the items associated to the specified group.
            Default value of this parameter is 0. 'offset' and the 'limit' parameters are effective only when the value
            of this parameter is 0.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: offset
          description: |
            Number of records to be skipped from the starting index of the results.
            For instance, setting its value to 1 will skip the first element of the result.
            Default value of this parameter is 0.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: limit
          description: |
            Maximum number of records to be retrieved. Default value of this parameter is 20.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: Authorization
          type: string
          in: header
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]          
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ItemGroupPaginatedResponseDto'
        '404':
          description: |
            Malformed query parameters such as non numeric values, malformed or invalid group unique id,
            group unique id that has no association to the authorized user, group items 
            that has no association to the authorized user or not having sufficient permissions for 'Shared' or
            'My shared' group type would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    post:
      summary: Add Group Items
      description: |
        Adds items to the matching group for the provided group unique id which is owned
        by the authorized user (My Groups, Shared Groups) or the group types which has been automatically created for the authorized user
        such as 'Quick group' or 'Favorite Group'. 
        Whenever the authorized user provides a folder id(s), only the folder will be added
        if the group type of the specified group unique id is favorite. Otherwise all the child asset(s) will be added excluding the folder.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: AddGroupItems
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            The group unique id of the group whose items to be added.
          in: path
          required: true
          type: string
        - name: itemGroupDetails
          description: |
            The object containing items details to be added.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemGroupRequestDto'
        - name: Authorization
          type: string
          in: header
          required: true
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
      responses:
        '201':
          description: Successfully created.
          schema:
            type: array
            items:
              $ref: '#/definitions/ItemGroupResponseDto'
        '400':
          description: |
            Attempting to add items to a 'Shared My' group would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: |
            Malformed request body, malformed group unique id, invalid client timestamp 
            which is less than zero or greater than the current date time, Adding Items that 
            are not associated to the user, Inactive, expired, hidden, tablet only, is not ready, folders with the 'Featured' title
            or not having suffcient permission to interact with 'Shared Group' type would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    delete:
      summary: Delete Group Items
      description: |
        Deletes items from the matching group for the provided group unique id which is owned
        by the authorized user (My Groups, Shared Groups) or the automatically created group types for the authorized user such as 
        'Quick group' or 'Favorite Group'. 
        Authorized user can provide a query string parameter called 'isDeleteAll' (which is optional) with its value set to 1 
        to delete all the items associted to the specified group otherwise the user needs to provide 
        a list of item ids to be deleted separated by commas as a query string parameter. 

      security:
        - Bearer: []
      tags:
        - Groups
      operationId: DeleteGroupItems
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            Group unique id of the group from which the items to be deleted.
          in: path
          required: true
          type: string
        - name: isDeleteAll
          description: |
            If this parameter is specified, the value of it should be either 1 or 0.
            With its value set to 1, the endpoint will delete all the items associated to the specified group.
            Default value of this paramter is 0.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: itemIds
          description: |
            This parameter is a list of item ids seperated by commas and is mandatory when the isDeleteAll parameter
            is not specified or with its value set to zero. Item id list is optional and will be ignored if specified when the
            value of the isDeleteAll parameter is 1.
          in: query
          required: false
          type: string
        - name: Authorization
          type: string
          in: header
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          required: true
      responses:
        '200':
          description: Successfully deleted.
          schema:
            $ref: '#/definitions/successMesage'
        '400':
          description: |
            Specifying invalid values for the isDeleteAll parameter such as non numeric value or a value that 
            is not 1 or 0, a malformed item id list containing non numeric values or
            without separated by commas or an invalid item list which is not associated to the authorized user
            would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: |
            Not having sufficient permissions for the authorized user to 
            interact with the type of 'Shared Group' would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/UpdateOrder':
    post:
      summary: Update Group Order
      description: |
        This endpoint updates the sort order of the groups which is owned by or shared to the authorized user (My Group, Shared Group, Shared My Group).
        The authorized user needs to provide all the group unique ids in the updated order 
        excluding the automatically created group types as in 'Quick Group' or 'Favorite Group'.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: UpdateGroupsOrder
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupsRequest
          description: |
            An object containing a list of all the group unique ids in the updated order and the client updated timestamp.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupSortRequestDto'
        - name: Authorization
          type: string
          in: header
          required: true
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
      responses:
        '200':
          description: Successfully updated.
          schema:
            type: array
            items:
              minLength: 2
              type: string
              enum: [0e72u1u7-324d-440e-ee44-f24bc133a958, 50410e14-b6c8-4k95-b99b-c801eee4fo89, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11, 99ce1239-89c1-5r78-bdf0-5862320ea587, fb6ccb34-4131-417b-9b21-89ubub884bb9]
              uniqueItems: true
        '400':
          description: |
            Malformed or empty request body, malformed group unique ids, a groupd id list
            containing ids of groups which is not owned by or not shared to the authorized user, 
            automatically created group types such as 'Quick Group', 'Favorite Group' or
            an invalid timestamp which is less than zero or greater than the current date time 
            would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{id}/Items/UpdateOrder':
    post:
      summary: Update Group Items Order
      description: |
        This endpoint updates the sort order of the items associated to the matching group 
        for the provided group unique id which is owned by the authorized user (My Groups, Shared Groups)
        or the automatically created group types for the authorized user as in 'Quick Group' or 'Favorite Group'.
        The authorized user needs to provide all the item ids of the specified group in the updated order.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: UpdateItemsOrder
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: id
          description: |
            The group unique id of the group whose item order to be updated.
          in: path
          required: true
          type: integer
          format: int32
          maximum: 1000
          minimum: 1
        - name: data
          description: |
            An object containing a list of all the item ids of the specified group in the updated order and the client updated timestamp.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemGroupSortRequestDto'
        - name: Authorization
          type: string
          in: header
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          required: true
      responses:
        '200':
          description: Successfully updated.
          schema:
            type: array
            items:
              format: int32
              type: integer
              maximum: 1000
              minimum: 1
              uniqueItems: true
              minLength: 2
            minimum: 3
        '400':
          description: |
            Malformed or empty request body, malformed group unique id, 
            non numeric item ids or an invalid timestamp which is less than zero or greater 
            than the current date time would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: |
            Invalid group unique id which is not matching with any of the group unique ids
            of the groups associted to the the authorized user excluding 'My Shared Group', not having sufficient permissions to 
            interact with 'Shared Group' type, failing basic validations of items such as active, is ready,
            hidden, expired, tablet only or item ids not being associated to the user would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/Favorites':
    get:
      summary: Get Favourite Group
      description: |
        Retrieves the favorite group of the authorized user. This group type is automatically
        created by the CMS once, on user creation.
      
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetFavouriteGroup
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupResponseDto'
      deprecated: false
  '/api/{version}/Groups/QuickGroup':
    get:
      summary: Get Quick Groups
      description: |
        Retrieves the quick group of the authorized user. This group type is automatically
        created by the client application once, on user's first log on.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetQuickGroup
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
      responses:
        '200':
          description: Successful response.
          schema:
            type: array
            items:
              $ref: '#/definitions/GroupResponseDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}/Shared':
    post:
      summary: Create Shared Group
      description: | 
        This endpoint basically changes the group type of the matching 'My Group' for the provided group unique id
        which is owned by the the authorized user, to a 'Shared Group'. Once a group has been shared it can be consumed
        by the community.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: CreateSharedGroup
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            The group unique id of the group to be shared.
          in: path
          required: true
          type: string
        - name: data
          description: |
            The object containing group name and client updated timestamp to modify 
            the 'My Group'.
          in: body
          required: true
          schema:
            $ref: '#/definitions/shareGroupRequestDto'
        - name: Authorization
          type: string
          in: header
          required: true
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: |
            Malformed request body, invalid or malformed group unique id,
            group unique id of a group which is not a 'My Group',
            Not having any items associated to the group or an invalid timestamp 
            which is less than zero or greater than the current date time 
            would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: |
            Not having sufficient permissions to interact with 'Shared Groups' would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    put:
      summary: Remove Shared Group
      description: |
        This endpoint basically unshares the matching 'Shared Group' for the provided group unique id
        which is owned by the authorized user and creates a new group of type 'My Group' which is identical 
        to the previously removed 'Shared Group', along with its associated items.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: RemoveSharedGroup
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            The group unique id of the group to be unshared.
          in: path
          required: true
          type: string
        - name: data
          description: |
            The object containing client updated timestamp for the 
            'My Group' to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupBaseDto'
        - name: Authorization
          type: string
          in: header
          required: true
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
      responses:
        '200':
          description: Successfully unshared.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: |
            Malformed request body, malformed group unique id, 
            group unique id of a group which is not a 'Shared Group' or an invalid timestamp which is 
            less than zero or greater than the current date time would cause this response.  
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: |
            Not having sufficient permissions to interact with 'Shared Group' type
            would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}/Consume':
    post:
      summary: Consume Shared Group
      description: |
        This endpoint basically retrieves the matching 'Shared Group' for the provided group unique id
        which is owned by another user and creates a new group of type 'My Shared Group' while maintaining
        a link to the items of the group that has been shared.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: ConsumeSharedGroup
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            The group unique id of the group to be consumed.
          in: path
          required: true
          type: string
        - name: data
          description: |
            The object containing client updated timestamp for the 
            'My Shared Group' to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupBaseDto'
        - name: Authorization
          type: string
          in: header
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: |
            Malformed request body, malformed group unique id, 
            group unique id of a group which is not a 'Shared Group', group unique id of a group 
            that belongs to the authorized user or an invalid timestamp which is 
            less than zero or greater than the current date time would cause this response.  
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: |
            Not having sufficient permissions to interact with 'Shared Group' type
            would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}/Convert':
    post:
      summary: Convert My Shared Group
      description: | 
        This endpoint basically creates a 'My Group' from a matching 'My Shared group' which is associated to the authorized user, 
        for the provided group unique id, along with its associated items.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: ConvertSharedGroup
      consumes: 
        - application/json
        - text/json
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: |
            The group unique id of the group to be converted.
          in: path
          required: true
          type: string
        - name: data
          description: |
            The object containing client updated timestamp for the 
            'My Shared Group' to be converted.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupBaseDto'
        - name: Authorization
          type: string
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: |
            Malformed request body, malformed or invalid group unique id, 
            group unique id of a group which is not a 'Shared My Group', 
            failing basic validations of items such as active, is ready,
            hidden, expired, tablet only or item ids not being associated to the user
            or an invalid timestamp which is less than zero or greater than 
            the current date time would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: |
            Not having sufficient permissions to interact with 'Shared My Group' type
            would cause this response.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Users/CurrentUser':
    get:
      summary: Gets authorized user
      description: |
        Retrieves basic information about the authorized user.
      security:
        - Bearer: []
      tags:
        - Users
      operationId: GetUserDetails
      consumes: []
      produces:
        - application/json; charset=utf-8
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          enum: [Bearer xxxxxx.yyyyyyy.zzzzzz]
          in: header
          required: true
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserBaseDto'
      deprecated: false  
definitions:
  OrganizationSettingsRequestDto:
    type: object
    required:
      - Keys
    properties:
      Keys:
        description: The organization setting keys.
        type: array
        items:
          type: string
          enum: [Organization.Setting_A, Organization.Setting_B, Organization.Setting_C]
        uniqueItems: true
  SegmentIdDto:
    type: object
    required:
      - SegmentIds
    properties:
      SegmentIds:
        description: Collection of segment ids.
        type: array
        items:
          type: integer
          maximum: 1000
          minimum: 1
          uniqueItems: true
  OAuthCode:
    type: object
    required:
      - code
      - clientId
      - redirectUri
    properties:
      code:
        description: The temporary access code.
        type: string
        enum: [sortr5d8dz5xgx0deg17, zpn6ti1sxeoo9nc0kd1x, h5dsvkl4ekr76vxwd7a7, 3d4bu76plmh0cxek9jms, jbli43tel7murr9djoua]
      clientId:
        description: The organization code.
        type: string
        enum: [macs-demo-dev, macs-staging, 3m-cc, 3m, topcon]
      redirectUri:
        description:  The callback entry point for the application.
        type: string
        enum: [https://imsmart-staging-webclient.comparenetworks.com]
  ErrorDto:
    type: object
    required:
      - TraceId
      - Message
    properties:
      TraceId:
        description:  This is the server side reference for the current error. Please provide this id to administrators get more informations about the error.
        type: string
        enum: [swt509]
      Message:
        description: The description of the error occurred.
        type: string
        enum: [Error Occurred]
  AuthDto:
    type: object
    required:
      - token
    properties:
      token:
        description: The authentication token to be used for API authorization.
        type: string
        enum: [eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e1bmlxdWVfbmFtZSI6Imltc21hcnRAY2FsY2V5L1BZG1pbiIsIm9yZ2FuaXphdGldvbl9jb2RlIjoibWFjcy1kZW1vIiwiYXBwbGljYXRpb25fc3ViZG9tYWluIjoiaW1zbWFydC1zdGFnaW5nIiewiYXBwbGljYXRpb25fZG9tYWluIjoiaW1zbWFydC1zdGFnaW5nLmNvbXBhcmVuZXR3b3Jrcy5jb20iLCJhcHBsaWNhdGlvbl9hcGlfYWxpYXMiOiNvbSIsImF1ZCI6Imltc3RhZ2luZyIsImV4cCI6MTQ5OTE4MDgxMiwibmJmIjoxNDk5MTUyMDEyfQ.pGK2SPpGcFOMQUEohyQjiTM6IrPfmUmQsxDvoJK4cVU]
  ItemDto:
    type: object
    required:
      - ItemId
      - Title
      - FeaturedTitle
      - ItemUniqueIdentifier
      - Size
      - OrganizationId
      - ContentModified
      - IsReady
      - ExpireDate
      - FileType
      - Active
      - Shareable
      - Description
      - ItemType
      - Created
      - Modified
      - HasLargeImage
      - HasSmallImage
      - HasIconImage
      - PartNo
      - Keyword
      - AssetUrl
      - AlternateShareUrl
      - Checksum
      - LargeImageChecksum
      - SmallImageChecksum
      - IconImageChecksum
      - RootLevelFolder
      - HasLink
      - ImageModified
      - ShowBlackBar
      - ShowDescription
      - KeyBenefit
      - BannerImageChecksum
      - HasBannerImage
      - CrocodocUuid
      - IconImageName
      - SmallImageName
      - LargeImageName
      - BannerImageName
      - FileStorageName
      - AlternateFileStorageName
      - HasAlternateFile
      - IsExternal
      - HTML5Enabled
    properties:
      ItemId:
        description: Unique id of the item.
        format: int32
        type: integer
        minimum: 1000
        maximum: 100000
      Title:
        description: Title of the item.
        type: string
        enum: [Item A Title, Item B Title, Item C Title, Item D Title, Item E Title]
      FeaturedTitle:
        description: Featured title of the item.
        type: string
        enum: [Item A Featured Title, Item B Featured Title, Item C Featured Title, Item D Featured Title, Item E Featured Title]
      ItemUniqueIdentifier:
        description: Unique identifier of the item.
        type: string
        enum: [0e72u1u7-324d-440e-ee44-f24bc133a958, 50410e14-b6c8-4k95-b99b-c801eee4fo89, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11, 99ce1239-89c1-5r78-bdf0-5862320ea587, fb6ccb34-4131-417b-9b21-89ubub884bb9]
      Size:
        description: File size of the main asset (original file).
        format: int32
        type: integer
        minimum: 10
        maximum: 1000000
      OrganizationId:
        description: Organization id of the item.
        format: int32
        type: integer
        minimum: 1
        maximum: 100
      ContentModified:
        description: Last modified date of the main asset (original file). Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      IsReady:
        description: Status of whether the asset has completed post processing.
        type: boolean
      ExpireDate:
        description: Expiry date of the asset. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      FileType:
        description: File type of the main asset (original file).
        type: string
        enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
      Active:
        description: Active status of the asset.
        type: boolean
      Shareable:
        description: Shareable status of the asset.
        type: boolean
      Description:
        description: Description of the item.
        type: string
        enum: [Item A Description, Item B Description, Item C Description, Item D Description, Item E Description]
      ItemType:
        description: Numeric representation of the ItemType.
        format: int32
        type: integer
        minimum: 1
        maximum: 4
      Created:
        description: Created date of the item. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      Modified:
        description: Last modified date of the item. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      HasLargeImage:
        description: Indicates whether the large image is available for the item.
        type: boolean
      HasSmallImage:
        description: Indicates whether the small image is available for the item.
        type: boolean
      HasIconImage:
        description: Indicates whether the icon image is available for the item.
        type: boolean
      PartNo:
        description: Part number for the asset.
        type: string
        enum: [Item Part Number]
      Keyword:
        description: Keywords specified for the item.
        type: string
        enum: [ Item A Keyword, Item B Keyword, Item C Keyword, Item D Keyword, Item E Keyword]
      AssetUrl:
        description: The URL of the asset. This URL can be either a Brightcove, URL as file, Link, Buy It Now, Open In Another App, Shortcut or External asset.
        type: string
        enum: [http://www.mockdata.com/a, http://www.mockdata.com/b, http://www.mockdata.com/c, http://www.mockdata.com/d, http://www.mockdata.com/e]
      AlternateShareUrl:
        description: The alternate share url of the assets.
        type: string
        enum: [http://www.sharedata.com/a, http://www.sharedata.com/b, http://www.sharedata.com/c, http://www.sharedata.com/d, http://www.sharedata.com/e]
      Checksum:
        description: Checksum of the main asset (original file).
        type: string
        enum: [vv9e8jo9henpi2owu8l8, k1qc11huyhu5ocp31a2q, zv5lpsph6yn99w7qide7, 0t1byx20cv38dvm8u2eg, a5j4gr6b5pppk58feqrx]
      LargeImageChecksum:
        description: Checksum of the large image.
        type: string
        enum: [wo99rr6v92t2o1k2yp6n, kuhdl9bw5sgc78cgoe6l, 9xpz7yfudg6duwe57rc2, i6anceseb7ir9q6hnuvd, p28en0aopozd9jvrubql]
      SmallImageChecksum:
        description: Checksum of the small image.
        type: string
        enum: [rkf12i6vudle4jgx0x91, wqb2zs50tliavz71umh4, 2lmllifi8moy48ipu0x1, ez7wmkllboawzd69s8c4, jcthp0e1ke23t0loefn5]
      IconImageChecksum:
        description: Checksum of the icon image.
        type: string
        enum: [irc3pah6l76t549luoip, wll5qy7vw28x9heriu5k, f4tv83khr6nrd80fuu21, 6pcounor02xmitgfranc, 3ew8a606p0z5r77tsl2w]
      RootLevelFolder:
        description: Indicates whether the folder is a root folder.
        type: boolean
      HasLink:
        description: Indicates whether the item has an url.
        type: boolean
      ImageModified:
        description: The last modified date of any of the images (Large, Small, Icon, Banner, FullScreen, Fat, Skinny, FeaturedLarge, TwoThird, OneThird, SquareLarge). Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      ShowBlackBar:
        description: Indicates whether to show the black/white overlay of the tile of an item.
        type: boolean
      ShowDescription:
        description: Indicates whether to show the description in the overlay of the tile of an item.
        type: boolean
      KeyBenefit:
        description: The values for the key benefits folder template specified for a folder.
        type: string
      BannerImageChecksum:
        description: Checksum of the banner image.
        type: string
        enum: [esz0dhgbaf4hqyqb1bcd, 8awloag2yvrf4fq8zmmq, biya1au39qq0tqjkwb5m, a52f58tarongcuewwbb5, 5t54oky9uyonpqd9tb8b]
      HasBannerImage:
        description: Indicates whether the banner image exists.
        type: boolean
      CrocodocUuid:
        description: Indicates Crocodoc UUID for the asset.
        type: string
        format: uuid
        enum: [a25f5f4d-0ecd-4b3c-b62b-5ce9a1622b55, 39a6780a-40e9-480e-95c1-871eef264b0b, b2cf4d64-1c26-4054-b184-7c63c25645dc, dd196595-7d85-4b00-b2db-7d3f1f381562, b83e5746-d25e-407f-a8cd-b80ba6f0b729]
      IconImageName:
        description: Storage (S3) name of the icon image.
        type: string
        enum: [0e72u1u7-324d-440e-ee44-f24bc133a958_icon, 50410e14-b6c8-4k95-b99b-c801eee4fo89_icon, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11_icon, 99ce1239-89c1-5r78-bdf0-5862320ea587_icon, fb6ccb34-4131-417b-9b21-89ubub884bb9_icon]
      SmallImageName:
        description: Storage (S3) name of the small image.
        type: string
        enum: [0e72u1u7-324d-440e-ee44-f24bc133a958_small, 50410e14-b6c8-4k95-b99b-c801eee4fo89_small, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11_small, 99ce1239-89c1-5r78-bdf0-5862320ea587_small, fb6ccb34-4131-417b-9b21-89ubub884bb9_small]
      LargeImageName:
        description: Storage (S3) name of the large image.
        type: string
        enum: [0e72u1u7-324d-440e-ee44-f24bc133a958_large, 50410e14-b6c8-4k95-b99b-c801eee4fo89_large, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11_large, 99ce1239-89c1-5r78-bdf0-5862320ea587_large, fb6ccb34-4131-417b-9b21-89ubub884bb9_large]
      BannerImageName:
        description: Storage (S3) name of the banner image.
        type: string
        enum: [0e72u1u7-324d-440e-ee44-f24bc133a958_banner, 50410e14-b6c8-4k95-b99b-c801eee4fo89_banner, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11_banner, 99ce1239-89c1-5r78-bdf0-5862320ea587_banner, fb6ccb34-4131-417b-9b21-89ubub884bb9_banner]
      FileStorageName:
        description: Storage (S3) name of the main asset (original file).
        type: string
        enum: [0e72u1u7-324d-440e-ee44-f24bc133a958, 50410e14-b6c8-4k95-b99b-c801eee4fo89, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11, 99ce1239-89c1-5r78-bdf0-5862320ea587, fb6ccb34-4131-417b-9b21-89ubub884bb9]
      AlternateFileStorageName:
        description: Storage (S3) name of the alternate file.
        type: string
        enum: [0e72u1u7-324d-440e-ee44-f24bc133a958_alternate, 50410e14-b6c8-4k95-b99b-c801eee4fo89_alternate, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11_alternate, 99ce1239-89c1-5r78-bdf0-5862320ea587_alternate, fb6ccb34-4131-417b-9b21-89ubub884bb9_alternate]
      HasAlternateFile:
        description: Status of whether Storage (S3) has alternate file.
        type: boolean
      IsExternal:
        description: Status of whether this instance has an external item..
        type: boolean
      HTML5Enabled:
        description: Indicates whether HTML5 is enabled.
        type: boolean
  ItemLinkDto:
    type: object
    required:
      - MainFile
      - AlternateFile
      - LargeImage
      - BannerImage
      - SmallImage
      - IconImage
      - SquareLargeImage
      - OneThirdImage
      - TwoThirdImage
      - FeaturedLargeImage
      - SkinnyImage
      - FatImage
      - FullScreenImage
    properties:
      MainFile:
        description: Storage (S3) link of the main file.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      AlternateFile:
        description: Storage (S3) link of the alternate file.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_alternate?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      LargeImage:
        description: Storage (S3) link of the large image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_large?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      BannerImage:
        description: Storage (S3) link of the banner image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_banner?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      SmallImage:
        description: Storage (S3) link of the small image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_small?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      IconImage:
        description: Storage (S3) link of the icon image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_icon?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      SquareLargeImage:
        description: Storage (S3) link of the square large image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_squarelarge?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      OneThirdImage:
        description: Storage (S3) link of the one third image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_onethird?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      TwoThirdImage:
        description: Storage (S3) link of the two third image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_twothird?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      FeaturedLargeImage:
        description: Storage (S3) link of the rounded large image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_featurelarge?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      SkinnyImage:
        description: Storage (S3) link of the skinny image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_skinny?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      FatImage:
        description: Storage (S3) link of the fat image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_fat?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      FullScreenImage:
        description: Storage (S3) link of the full screen image.
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_fullscreen?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
  AccessibilityStatus:
    type: object
    required:
      - IsAccessible
    properties:
      IsAccessible:
        description: Accessible status of the asset.
        type: boolean
  ItemCollection:
    type: object
    required:
      - items
    properties:
      items:
        description: The list of item user data belonging to the authenticated user.
        type: array
        items:
          $ref: '#/definitions/ItemUserDataDto'
    minItems: 2
    uniqueItems: true
  ItemUserDataDto:
    type: object
    required:
      - userId
      - modifiedDate
      - privacy
      - value
      - appCode
      - name
      - uniqueId
    properties:
      userId:
        description: The owner's user id.
        format: int32
        type: integer
        enum: [2435]
        uniqueItems: false
      modifiedDate:
        description: The last modified date. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        type: string
        format: date-time
      privacy:
        description: The privacy status - public is 1 and private is 0.
        format: int32
        type: integer
        minimum: 0
        maximum: 1
      value:
        description: The specified value.
        type: string
        enum: [{"activity":"Report Genarated","value":"practiceBuilder","type":"report","name":"Alexander The Great"}, {"id":58,"name":"John Doe","jobtitle":"Sr. JOE","email":"john.doe@email.com","phone":"(123) 456-7890","therapeuticarea":"therapeuticarea","therapeuticsubarea":"therapeuticsubarea","city":"city","state":"state","professionalexperience":"professionalexperience","teamleads":"teamleads","territorystates":"territorystates","expertisearea":"expertisearea","fmtleadfor":"fmtleadfor","education":"education","hobbies":"hobbies","professionalinterests":"professionalinterests","molecule":"molecule","manager":"manager","profileimg":"profileimg.jpg"}]
      appCode:
        description: The specified application code.
        type: string
        enum: [mmm-mam-5qtys7, mmm-mam-3foes5, mmm-mam-8rvyw0, mmm-mam-2cemn1]
      name:
        description: The specified name.
        type: string
        enum: [crodrs@mmm.com-profile, a2be8135-fxe5-4039-bga5-19b2055q4303, tesruser@compworks.com-profile, e321s2b0-1db7-49d6-b61d-9a9en1e4950h]
      uniqueId:
        description: The unique identifier.
        type: string
        format: uuid
        enum: [a061a450-608d-11e7-907b-a6006ad3dba0]
  OrganizationDetails:
    type: object
    required:
      - name
    properties:
      name:
        description: The organization name.
        type: string
        enum: [3M Customer Connect, 3M Sales Aid, Agilent, Bio-Techne, Ecolab]
  ItemCrocodocSessionDto:
    type: object
    required:
      - Uuid
      - Session
      - Status
      - Viewable
      - Error
    properties:
      Uuid:
        description: Uuid of asset.
        type: string
        format: uuid
        enum: [a061a450-608d-11e7-907b-a6006ad3dba0]
      Session:
        description: Crocodoc session for the asset.
        type: string
        enum: [5ARHVtko5ouhylU_2Z_Uv0aMw5JvhYckfRH2gHPNQX_c4uL4F3MBZ9PgxQRmx13tUMc-w12-bRv5nQuMl28kAZYJEnfdQmpQKs4-3xNMn9F0jND0YWh_C2xqRczt]
      Status:
        description: Status of asset. 
        type: string
        enum: [DONE,PROCESSING]
      Viewable:
        description: Viewable state of asset
        type: boolean
      Error:
        description: Description of the error if any.
        type: string
  ItemDownloadLinkDto:
    type: object
    required:
      - ItemId
      - AssetTitle
      - AllowToEmail
      - Shareable
      - AssetLink
      - ExpiryDate
    properties:
      ItemId:
        description: Id of a item.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      AssetLink:
        type: string
        enum: [https://<VerticalSubdomain>.comparenetworks.com/Files?id=1234&ts=1499131806&sig=gRZd0f65dIAmxYPhlNPUlhpH3sw%3d]
      AssetTitle:
        description: Title of the asset.
        type: string
        enum: [Item Title]
      ExpiryDate:
        description: Expiry date of the asset. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      AllowToEmail:
        description: indicates whether allow to email.
        type: boolean
      Shareable:
        description: Shareable status of the asset.
        type: boolean
  ItemFilterCategoryDto:
    type: object
    required:
      - TagGroups
      - FileTypes
    properties:
      TagGroups:
        description: Group of tags.
        type: array
        items:
          $ref: '#/definitions/ItemFilterTagGroupDto'
      FileTypes:
        description: File type of the main asset (original file).
        type: array
        items:
          $ref: '#/definitions/ItemFilterFileTypeDto'
    minItems: 1
    uniqueItems: true
  ItemFilterFileTypeDto:
    type: object
    required:
      - FileType
      - FileTypeId
      - FileFormats
    properties:
      FileType:
        description: File type of the main asset (original file).
        type: string
        enum: [Video, Image, Pdf, Link, Audio]
      FileTypeId:
        description: File type id of the main asset (original file).
        format: int32
        type: integer
        maximum: 120
        minimum: 1
      FileFormats:
        description: File format of the main asset (original file).
        type: array
        items:
          type: string
          enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
    minItems: 1
    uniqueItems: true
  ItemFilterTagGroupDto:
    type: object
    required:
      - TagGroupName
      - Tags
    properties:
      TagGroupName:
        description: Group of tag of the item.
        type: string
        enum: [Tag Group A, Tag Group B, Tag Group C, Tag Group D, Tag Group E]
      Tags:
        description: List of tags.
        type: array
        items:
          $ref: '#/definitions/ItemFilterTagDto'
  ItemFilterTagDto:
    type: object
    required:
      - TagName
      - TagId
    properties:
      TagName:
        description: Name of the tag.
        type: string
        enum: [Tag A, Tag B  , Tag C, Tag D, Tag E]
      TagId:
        description: Id of the tag.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
  WebClientItemDto:
    type: object
    required:
      - Items
      - Total
    properties:
      Items:
        description: response items.
        type: array
        items:
          $ref: '#/definitions/ItemDto'
      Total:
        description: Total count of items.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
  ItemRelatedDto:
    type: object
    required:
      - Items
      - ItemToItems
      - ItemSpecificationValues
      - ItemCustomProperties
      - ItemSettings
    properties:
      Items:
        type: array
        items:
          $ref: '#/definitions/ItemDto'
      ItemToItems:
        type: array
        items:
          $ref: '#/definitions/ItemToItemDto'
      ItemSpecificationValues:
        type: array
        items:
          $ref: '#/definitions/ItemSpecificationValueDto'
      ItemCustomProperties:
        type: array
        items:
          $ref: '#/definitions/ItemCustomPropertyDto'
      ItemSettings:
        type: array
        items:
          $ref: '#/definitions/ItemSettingDto'
    minItems: 1
    uniqueItems: true
  ItemToItemDto:
    type: object
    required:
      - ChildId
      - ParentId
      - SortOrder
      - SegmentId
      - Created
      - Modified
    properties:
      ChildId:
        description: First level item's id of given parent id.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      ParentId:
        description: Id of a item(Segment, Folder) whose have child items.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      SortOrder:
        description: Ascending order and descending order.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      SegmentId:
        description: Id of a segment.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      Created:
        description: Created date of the item. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      Modified:
        description: Modified date of the item. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
    minItems: 1
    uniqueItems: true
  ItemSpecificationValueDto:
    type: object
    required:
      - ItemId
      - SpecificationValueId
      - Created
      - Modified
    properties:
      ItemId:
        description: Id of item.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      SpecificationValueId:
        description: Id of specification value.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      Created:
        description: Created date-time of the item specification value. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      Modified:
        description: Modified date-time of the item specification value. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
    minItems: 1
    uniqueItems: true
  ItemCustomPropertyDto:
    type: object
    required:
      - ItemId
      - CustomPropertyId
      - Value
      - Created
      - Modified
    properties:
      ItemId:
        description: Id of the item.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      CustomPropertyId:
        description: Id of the item custom property.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      Value:
        description: Value of the item custom property.
        type: string
      Created:
        description: Created date-time of the item custom property. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      Modified:
        description: Modified date-time of the item custom property. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
    minItems: 1
    uniqueItems: true
  ItemSettingDto:
    type: object
    required:
      - ItemSettingId
      - ItemId
      - Name
      - Value
      - Created
      - Modified
    properties:
      ItemSettingId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      ItemId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      Name:
        description: Name of item settings.
        type: string
        enum: [Setting Name A, Setting Name B, Setting Name C, Setting Name D, Setting Name E]
      Value:
        description: Value of item settings.
        type: string
        enum: [Setting Value A, Setting Value B, Setting Value C, Setting Value D, Setting Value E]
      Created:
        description: Created date-time of the item settings. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
      Modified:
        description: Modified date-time of the item settings. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
        format: date-time
        type: string
    minItems: 1
    uniqueItems: true
  ItemSearchDto:
    type: object
    required:
      - ItemIds
      - FileTypes
      - Tags
      - SearchText
      - StartIndex
      - PageSize
      - SortBy
      - SortOrder
    properties:
      ItemIds:
        description: Ids of items
        type: array
        items:
          type: integer
          enum: [100, 101, 102, 103, 104, 105]
      FileTypes:
        description: File type of the main asset (original file).
        type: array
        items:
          type: string
          enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
      Tags:
        description: List of tags.
        type: array
        items:
          type: integer
          enum: [1, 2, 3, 4, 5]
          uniqueItems: true
      SearchText:
        description: The text which want to search.
        type: string
        enum: [Search Text]
      StartIndex:
        description: Start index of response list of items.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      PageSize:
        description: Amount of response item list which want to display in one page.
        format: int32
        type: integer
        maximum: 100
        minimum: 1
      SortBy:
        description: Item property name which want to sort by
        type: string
        enum: [Title, Size, Created, Modified, FeaturedTitle]
      SortOrder:
        description: Ascending order and descending order
        type: string
        enum: [Asc, Desc]
    minItems: 1
    uniqueItems: true
  ItemFiltersDto:
    type: object
    required:
      - FileTypes
      - Tags
      - ShowFolder
      - StartIndex
      - PageSize
      - SortBy
      - SortOrder
    properties:
      FileTypes:
        description: File type of the main asset (original file).
        type: array
        items:
          type: string
          enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
      Tags:
        description: List of tags. Each group of tags in sparated list.
        type: array
        items:
          type: integer
          enum: [1, 2, 3, 4, 5]
          uniqueItems: true
      ShowFolder:
        description: Indicates to show first level childeren or all assets.
        type: boolean
      StartIndex:
        description: Start index of response list of items.
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      PageSize:
        description: Amount of response item list which want to display in one page.
        format: int32
        type: integer
        maximum: 100
        minimum: 1
      SortBy:
        description: Item property name which want to sort by.
        type: string
        enum: [Title, Size, Created, Modified, FeaturedTitle]
      SortOrder:
        description: Ascending order and descending order
        type: string
        enum: [Asc, Desc]
    minItems: 1
    uniqueItems: true
  GroupDto:
    type: object
    required:
      - Name
      - ClientUpdatedTimestamp
    properties:
      Name:
        type: string
        enum: [Group 1, Group 2, Group 3, Group 4, Group 5, Group 6, Group 7]
        description : Name of the group.
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description : Current timestamp of the client.
  GroupTypesDto:
    type: object
    required:
      - groupTypes
      - DisablePaginate
      - Offset
      - Limit
    properties:
      groupTypes:
        type: string
      DisablePaginate:
        type: integer
        format: int32
        maximum: 1
        minimum: 0
      Offset:
        type: integer
        format: int32
        maximum: 1000
        minimum: 0
      Limit:
        type: integer
        format: int32
        maximum: 1000
        minimum: 1
  GroupSortRequestDto:
    type: object
    required:
      - Groups
      - ClientUpdatedTimestamp
    properties:
      Groups:
        type: array
        items:
          type: string
          format : uuid
          enum: [0e72u1u7-324d-440e-ee44-f24bc133a958, 50410e14-b6c8-4k95-b99b-c801eee4fo89, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11, 99ce1239-89c1-5r78-bdf0-5862320ea587, fb6ccb34-4131-417b-9b21-89ubub884bb9]
        uniqueItems: true
        minLength: 2
        description: A list of group unique ids.
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: client updated time stamp.
  ItemGroupSortRequestDto:
    type: object
    required:
      - GroupItems
      - ClientUpdatedTimestamp
    properties:
      GroupItems:
        type: array
        minLength: 2
        description: List of item ids.
        items:
          type: integer
          format: int32
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        description: Client updated timestamp.
  ItemGroupRequestDto:
    type: object
    required:
      - ItemIds
      - ClientUpdatedTimestamp
    properties:
      ItemIds:
        type: array
        items:
          type: integer
          format: int32
          minimum: 1000
          maximum: 100000
          description: Item ids list.
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: Client updated timestamp.
  PaginationRequestDto:
    type: object
    required:
      - DisablePaginate
      - Offset
      - Limit
    properties:
      DisablePaginate:
        type: integer
        format: int32
        maximum: 1
        minimum: 0
      Offset:
        type: integer
        format: int32
        maximum: 100
        minimum: 0
      Limit:
        type: integer
        format: int32
        maximum: 100
        minimum: 1
  ItemGroupRequestBaseDto:
    type: object
    required:
      - DeleteAll
      - ItemIds
    properties:
      DeleteAll:
        type: boolean
      ItemIds:
        type: array
        items:
          type: integer
          format: int32
  GroupBaseDto:
    type: object
    required:
      - ClientUpdatedTimestamp
    properties:
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: Client updated timestamp.
  shareGroupRequestDto:
    type: object
    required:
      - ClientUpdatedTimestamp
    properties:
      GroupDescription:
        type: string
        enum: [Group description 1, Group description 2, Group description 3, Group description 4, Group description 5, Group description 6, Group description 7]
        description: Group description.
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: Client updated timestamp.
  GroupResponseDto:
    type: object
    required:
      - GroupUniqueId
      - Name
      - GroupOrder
      - UserId
      - GroupType
      - ClientUpdatedTimestamp
      - ServerUpdatedTimestamp
      - Created
      - Modified
      - OwnerName
    properties:
      GroupUniqueId:
        type: string
        format : uuid
        enum: [DD6B6CDD-43CE-4B97-8255-0000B1B8E748, DD6B6CDD-43CE-4B97-8255-0000B1B8E749, DD6B6CDD-43CE-4B97-8255-0000B1B8E720, E39B624E-FB67-4DC1-B869-60BFF0EC1B8A, AS6B6CDD-43CE-4B97-8255-0000B1C8E748, PQ6B6CDD-43CE-4B97-8255-0000B1C8E748]
        description: Unique id of the group.
      Name:
        type: string
        enum: [Group 1, Group 2, Group 3, Group 4, Group 5, Group 6, Group 7]
        description: Name of the group.
      GroupOrder:
        format: int32
        type: integer
        enum: [512, 1024, 1536, 2048, 2560]
        description: Sort order of the group.
      UserId:
        format: int32
        type: integer
        maximum: 10000
        minimum: 1000
        description : Id of the group owner.
      GroupType:
        type: string
        enum: [0, 1, 2, 3, 4]
        description: Type of the group.
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: Client updated time.
      ServerUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: Server updated time.
      Modified:
        format: date-time
        type: string
        description: Last modified date-time. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
      Created:
        format: date-time
        type: string
        description: Created date-time. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
      OwnerName:
        type: string
        enum: [Roland Paul, Nicholas Lemons, Kurt Heidler, Shane Ventura, Teddy Atkison]
        description: Name of the group owner (First name and the last name of the user).
  MyGroupResponseDto:
    type: object
    required:
      - GroupUniqueId
      - Name
      - GroupOrder
      - UserId
      - GroupType
      - ClientUpdatedTimestamp
      - ServerUpdatedTimestamp
      - Created
      - Modified
      - OwnerName
    properties:
      GroupUniqueId:
        type: string
        format : uuid
        enum: [DD6B6CDD-43CE-4B97-8255-0000B1B8E748, DD6B6CDD-43CE-4B97-8255-0000B1B8E749, DD6B6CDD-43CE-4B97-8255-0000B1B8E720, E39B624E-FB67-4DC1-B869-60BFF0EC1B8A, AS6B6CDD-43CE-4B97-8255-0000B1C8E748, PQ6B6CDD-43CE-4B97-8255-0000B1C8E748]
        description: Unique id of the group.
      Name:
        type: string
        enum: [Group 1, Group 2, Group 3, Group 4, Group 5, Group 6, Group 7]
        description: Name of the group.
      GroupOrder:
        format: int32
        type: integer
        enum: [512, 1024, 1536, 2048, 2560]
        description: Sort order of the group.
      UserId:
        format: int32
        type: integer
        maximum: 10000
        minimum: 1000
        description : Id of the group owner.
      GroupType:
        type: integer
        enum: [0]
        description: Type of the group.
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: Client updated time.
      ServerUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: Server updated time.
      Modified:
        format: date-time
        type: string
        description: Last modified date-time. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
      Created:
        format: date-time
        type: string
        description: Created date-time.
      OwnerName:
        type: string
        enum: [Roland Paul, Nicholas Lemons, Kurt Heidler, Shane Ventura, Teddy Atkison]
        description: Name of the group owner (First name and the last name of the user).
  ItemGroupResponseDto:
    type: object
    required:
      - UniqueId
      - GroupUniqueId
      - ItemId
      - ItemOrder
      - Created
      - Modified
      - ClientUpdatedTimestamp
      - ServerUpdatedTimestamp
      - Item
    properties:
      UniqueId:
        type: string
        format : uuid
        enum: [DD6B6CDD-43CE-4B97-8255-0000B1B8E748, DD6B6CDD-43CE-4B97-8255-0000B1B8E749, DD6B6CDD-43CE-4B97-8255-0000B1B8E720, E39B624E-FB67-4DC1-B869-60BFF0EC1B8A, AS6B6CDD-43CE-4B97-8255-0000B1C8E748, PQ6B6CDD-43CE-4B97-8255-0000B1C8E748]
        description : Unique id of the group item.
      GroupUniqueId:
        type: string
        format : uuid
        enum: [E39B624E-FB67-4DC1-B869-60BFF0EC1B8A, DD6B6CDD-43CE-4B97-8255-0000B1B8E748, ED6B6CDD-43CE-4B97-8255-0000B1B8E741, DD6B6CDD-43CE-4B97-8255-0000B1B8E720, CD6B6CDD-43CE-4B97-8255-0000B1B8E748, DD6B6CDD-43CE-4B97-8255-0000B1B8E749]
        description : Group unique id of the group.
      ItemId:
        format: int32
        type: integer
        maximum: 100
        minimum: 1
        description : The item id.
      ItemOrder:
        format: int32
        type: integer
        maximum: 100
        minimum: 1
        description : Order positon of the item.
      Modified:
        format: date-time
        type: string
        description : Modified date-time. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
      Created:
        format: date-time
        type: string
        description : Created date-time. Date-time format is 'yyyy-MM-dd HH:mm:ss.fff'.
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: Client updated time.
      ServerUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 1504919460
        minimum: 1
        description: Client updated time.
      Item:
        $ref: '#/definitions/ItemBaseDto'
  ItemGroupPaginatedResponseDto:
    required:
      - GroupItems
      - Total
    properties:
      GroupItems:
        type: array
        minItems: 2
        description : Items associated to the group.
        items:
          $ref: '#/definitions/ItemGroupResponseDto'
      Total:
        type: integer
        format: int64
        maximum: 100000
        minimum: 1
        description: Total number of records regardless of the pagination values. 
  WebClientGroupDto:
    required:
      - Groups
      - Total
    properties:
      Groups:
        type: array
        description: A list of groups.
        items:
          $ref: '#/definitions/GroupResponseDto'
      Total:
        type: integer
        format: int32
        maximum: 100000
        minimum: 0
        description: Total number of records regardless of the pagination values.
  successMesage:
    type: object
    required:
      - Message
    properties:
      Message:
        type: string
        enum: [Successfully Deleted.]
  ItemBaseDto:
    type: object
    required:
      - ItemId
      - ItemType
      - FileType
      - Title
      - Description
      - IconImageName
      - IsFavorite
    properties:
      ItemId:
        format: int32
        type: integer
        minimum: 10
        maximum: 100
        description: The item id.
      Title:
        type: string
        enum: [Item A Title, Item B Title, Item C Title, Item D Title, Item E Title]
        description: Item title.
      ItemType:
        format: int32
        type: integer
        minimum: 1
        maximum: 4
        description: Item type.
      FileType:
        type: string
        enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
        description: Item file type.
      IconImageName:
        type: string
        enum: [0e72u1u7-324d-440e-ee44-f24bc133a958_icon, 50410e14-b6c8-4k95-b99b-c801eee4fo89_icon, 55a2eb69-25cc-90e5-4c87-af11c4aa4e11_icon, 99ce1239-89c1-5r78-bdf0-5862320ea587_icon, fb6ccb34-4131-417b-9b21-89ubub884bb9_icon]
        description: Icon image name.
      IsFavorite:
        type: boolean
        description: Is a fvorited item.
      Description:
        type: string
        enum: [Item A Description, Item B Description, Item C Description, Item D Description, Item E Description]
        description: Description of the item.
  ItemShareLinkCollectionDto:
    required:
      - ItemDownloadLinks
    properties:
      ItemDownloadLinks:
        description: Download links of the item.
        type: array
        items:
          $ref: '#/definitions/ItemDownloadLinkDto'
  ItemLinkCollectionDto:
    required:
      - ItemLinks
    properties:
      ItemLinks:
        type: array
        items:
          $ref: '#/definitions/ItemLinkExtendedDto'
  ItemLinkExtendedDto:
    required:
      - ItemId
    allOf:
      - $ref: '#/definitions/ItemLinkDto'
      - properties:
          ItemId:
            description: Id of the item.
            format: int32
            type: integer
            minimum: 1000
            maximum: 100000
  UserBaseDto:
    required:
      - UserId
      - FirstName
      - LastName
      - Email
    properties:
      UserId:
        format: int32
        type: integer
        minimum: 1000
        maximum: 100000
        description: Unique id of the of the user.
      FirstName:
        type: string
        enum: [Firstname A, Firstname B, Firstname C]
        description : First name of the user.
      LastName:
        type: string
        enum: [LastName A, LastName B, LastName C]
        description : Last name of the user.
      Email:
        format: email
        type: string
        description: Email address of the user.