swagger: '2.0'
info:
  version: v1
  title: Webclient API
  description: |
    This an API for accessing data from imSMART CMS. 
    The new Webclient use this API for its operation.
    All the endpoints of this API requier to be HTTPS. 
    The base URL for all requests is https://vertical-subdomain.comparenetworks.com/webclientapi/api/.
    
    All responses are tailored towards the authentication user.
  contact:
    email: imsmart@comparenetworks.com
host: imsmart-staging.comparenetworks.com
basePath: /webclientapi
schemes:
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      To access the API, a valid token should be passed to all endpoints that required authentication. This is passed in the 'Authorization' header.
      A valid token is generated by the API and returned in the response when /auth/imsmart endpoint is called with valid user credentials.
      The following syntax must be used in the 'Authorization' header.
      
      "Authorization: Bearer xxxxxx.yyyyyyy.zzzzzz"
      
paths:
  '/auth/imsmart':
    post:
      summary: Authenticate User
      description: Authenticates the user and returns an access code to access the API.
      tags:
        - Auth
      operationId: AuthenticateUser
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: authCode
          description: The authentication code to validate the user.
          in: body
          required: true
          schema:
            $ref: '#/definitions/OAuthCode'
      responses:
        '200':
          description: The authentication token to access the API.
          schema:
            $ref: '#/definitions/AuthDto'
      deprecated: false
  '/api/{version}/Items/{id}':
    get:
      summary: Get Item
      description: Gets an item with the specified item id from the CMS.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetItem
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: id
          description: The id of the item to be retrieved.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The details of the item with the provided id.
          schema:
            $ref: '#/definitions/ItemDto'
        '404':
          description: When the provided id does not relate to an item, or if the item is hidden, or only viewable from a tablet device.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/{parentId}/Children':
    get:
      summary: Get Child Items
      description: Gets the child items (if any) of the provided item id.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetChildItems
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: parentId
          description: The id of the parent item.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: List of child items for the specified parent item id.
          schema:
            type: array
            items:
              $ref: '#/definitions/ItemDto'
      deprecated: false
  '/api/{version}/Items/{itemId}/ItemLinks':
    get:
      summary: Get Image Links
      description: Gets the image links for the item specified by the item id.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetItemLinks
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: itemId
          description: The id of the item whose image links are to be retrieved.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Image links of the item specified by the item id.
          schema:
            $ref: '#/definitions/ItemLinkDto'
      deprecated: false
  '/api/{version}/Items/{itemId}/ItemAccessibility':
    get:
      summary: Get Item Accessibility
      description: |
        Gets the accessibility status of the item.
        The item is assessible if the item exists, is not hidden and if it is not only viewable from a tablet device.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetItemAccessibility
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: itemId
          description: The id of the item whose accessibility is required.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: True if the user is allowed to access the given item, otherwise False
          schema:
            $ref: '#/definitions/AccessibilityStatus'
      deprecated: false
  '/api/{version}/Items/{itemId}/CreateCrocodocSession':
    get:
      summary: Get Crocodoc Session
      description: |
        Gets a created Crocodoc session for the item with the provided item id.
        A session will only be created if the status is either PROCESSING or DONE. 
        A crocodoc document status may change to ERROR from PROCESSING in the event that processing fails.
        (https://crocodoc.com/docs/api/#doc-status)
        
        The UUID denotes the unique crocodoc id.
        The Error is populated only when the Status is ERROR.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: CreateCrocodocSession
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: itemId
          description: The item id for the Crocodoc session.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Created crocodoc session details of the item, specified by the item Id.
          schema:
            $ref: '#/definitions/ItemCrocodocSessionDto'
        '400':
          description: Thrown if the item file type is not supported.
          schema:
            $ref: '#/definitions/ErrorDto'
        '204':
          description: Returned if the item has no cotent, or if the crocodoc encountered an error when processing the file.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: Returned if the item is not found.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/{itemId}/GetAssetEmailLink':
    get:
      summary: Get Download URL
      description: |
          Gets the Download URL for an item specified by the item id.
          
          The AssetLink is only populated if the asser is sharable and if emailing is allowed.
          ExpiryDate is populated only if the AssetLink is populated.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetAssetEmailLink
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: itemId
          description: The item id whose download URL is required.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Download URL of the item specified by the item id.
          schema:
            $ref: '#/definitions/ItemDownloadLinkDto'
        '404':
          description: Returned if the item is not found.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/FilterCategories':
    post:
      summary: Get Item Filter Categories
      description:
          Gets the item filter categories for the segment specified by the segment id.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetItemFilterCategories
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
      parameters:
        - name: segmentId
          description: The segment ids of the segments for which the item filter categories are required.
          in: body
          required: true
          schema:
            $ref: '#/definitions/SegmentIdDto'
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The item filter categories for the segment(s) specified by the segment id(s).
          schema:
            $ref: '#/definitions/ItemFilterCategoryDto'
        '400':
          description: Thrown if the parameters are invalid or if segments are not associated to the authenticated user.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/Search':
    post:
      summary: Search
      description: |
        Performs a search based on the provided search criteria on the items associated to the authenticated user.
        
        Total denotes the total number of results for the search parameters.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: Search
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: filterOptions
          description: The filtering criteria.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemSearchDto'
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Collection of items associated to the authenticated user that matched to the search criteria
          schema:
            $ref: '#/definitions/WebClientItemDto'
        '400':
          description: Thrown if the parameters are invalid or if one of the required parameters are not provided or if segments are not associated to the authenticated user.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/Library':
    post:
      summary: Library
      description: |
        Gets items matching the filter criteria, from the items associated to the current user.
        
        Total denotes the total number of results for the search parameters.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: Library
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: filterOptions
          description: The filter criteria to be filtered.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemFiltersDto'
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Collection of items matched to the user filter criteria
          schema:
            $ref: '#/definitions/WebClientItemDto'
        '400':
          description: Thrown if the parameters are invalid or if segments are not associated to the authenticated user.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/{segmentId}/SegmentItems':
    get:
      summary: Get Segment Items
      description: Gets the child items for the given segment.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: GetSegmentItems
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: segmentId
          description: The segment id whose child items need to be retrieved.
          in: path
          required: true
          type: integer
          format: int32
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: List of segments associated to the user
          schema:
            $ref: '#/definitions/ItemRelatedDto'
        '403':
          description: Thrown if the authorized user has no access to the specified segment.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/RetrieveShareLinkForAssets':
    get:
      summary: Gets the share links for assets
      description: Gets the share links for provided assets Ids.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: RetrieveShareLinkForAssets
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: itemIds
          description: The item Id list.
          in: query
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: List of share link for given items.
          schema:
            $ref: '#/definitions/ItemShareLinkCollectionDto'
        '404':
          description: Thrown if the specified item ids don't belong to the user.
          schema:
            $ref: '#/definitions/ErrorDto'
        '400':
          description: Thrown if the parameter is invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Items/RetrieveLinksForItems':
    get:
      summary: Gets the links for items
      description: Gets the links for provided item Ids.
      security:
        - Bearer: []
      tags:
        - Items
      operationId: RetrieveLinksForItems
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: itemIds
          description: The item Id list.
          in: query
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: List of links for given items.
          schema:
            $ref: '#/definitions/ItemLinkCollectionDto'
        '404':
          description: Thrown if the specified item ids don't belong to the user.
          schema:
            $ref: '#/definitions/ErrorDto'
        '400':
          description: Thrown if the parameter is invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/ItemUserData':
    get:
      summary: Get Item User Data
      description: Gets the item user data collection for the authenticated user.
      security:
        - Bearer: []
      tags:
        - ItemUserData
      operationId: GetItemUserData
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Item user data collection for the authenticated user.
          schema:
            $ref: '#/definitions/ItemCollection'
      deprecated: false
  '/api/{version}/Organization':
    get:
      summary: Get Organization
      description: Gets the organization details.
      tags:
        - Organization
      operationId: GetOrganizationDetails
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The organization details.
          schema:
            $ref: '#/definitions/OrganizationDetails'
      deprecated: false
  '/api/{version}/OrganizationSettings':
    post:
      summary: Get Organization Settings
      description: Gets organization settings.
      tags:
        - OrganizationSettings
      operationId: GetOrganizationSettings
      consumes: 
          - application/json
          - text/json
          - application/xml
          - text/xml
          - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: organizationSettingsKeys
          description: The organization setting keys to be retrieved.
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganizationSettingsRequestDto'
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The organization settings of the authenticated user.
          schema:
            type: object
            additionalProperties:
              type: string
              minLength: 1
        '400':
          description: Thrown if the parameters are invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/OrganizationUserSettings':
    post:
      summary: Get Organization User Settings
      description: Gets the authenticated user's organization and user settings.
      security:
        - Bearer: []
      tags:
        - OrganizationUserSettings
      operationId: GetOrganizationUserSettings
      consumes: 
          - application/json
          - text/json
          - application/xml
          - text/xml
          - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: organizationUserSettingsKeys
          description: The setting keys to be retrieved.
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganizationSettingsRequestDto'
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The authenticated user's organization and user settings.
          schema:
            type: object
            additionalProperties:
              type: string
        '400':
          description: Thrown if the parameters are invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: Thrown if user has no region, if the uer's language is the default language or if localization is disabled for the organization.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Segments':
    get:
      summary: Get Segments
      description: Gets the user's segments.
      security:
        - Bearer: []
      tags:
        - Segments
      operationId: GetSegments
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The segments associated to the authenticated user.
          schema:
            type: array
            items:
              $ref: '#/definitions/ItemDto'
      deprecated: false
  '/api/{version}/Groups':
    post:
      summary: Create My Group
      description: Creates a new group of type My Group.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: CreateGroup
      consumes: 
          - application/json
          - text/json
          - application/xml
          - text/xml
          - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupData
          description: The information of the group to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '201':
          description: The details of the created group.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: Thrown if a parameter is invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    get:
      summary: Retrieve Requested Groups
      description: Gets the groups with the provided types. Favourite and Quick Groups are not returned.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetGroupsByType
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupTypes
          description: Types of groups.
          in: query
          required: false
          type: string
        - name: DisablePaginate
          description: Is paginate.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: offset
          description: Number of records to be omitted from starting index.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: limit
          description: Number of records to be displayed.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 1
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The details of the retrieved groups.
          schema:
            $ref: '#/definitions/WebClientGroupDto'
        '400':
          description: Thrown if a parameter is invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: |
            Thrown if groups not associated to user or the group type is invalid or unsupported.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}':
    get:
      summary: Get Group
      description: Gets the group with the provided id.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetGroup
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: groupData
          description: The information of the group to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The details of the retrieved group.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '404':
          description: Thrown if no group found for the specified group unique id or invalid group unique id.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    put:
      summary: Edit Group
      description: Edits the group with the provided id and name.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: EditGroup
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: groupData
          description: The information of the group to be updated.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The details of the updated group.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: Thrown if a parameter is invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: Thrown if no group found for the specified group unique id or invalid group unique id.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    delete:
      summary: Delete Group
      description: Deletes the group with the provided id.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: DeleteGroup
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successfully Deleted Group.
          schema:
            $ref: '#/definitions/successMesage'
        '404':
          description: Thrown if no group found for the specified group unique id or invalid group unique id.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}/Items':
    get:
      summary: Get Group Items
      description: Gets the items for the group with the provided id.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetGroupItems
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: DisablePaginate
          description: Is paginate.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: offset
          description: Paginate offset.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: limit
          description: Paginate limit.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The items for the group with the provided id.
          schema:
            $ref: '#/definitions/ItemGroupPaginatedResponseDto'
        '404':
          description: Thrown if group do not exist for the current user.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    post:
      summary: Add Group Items
      description: |
        This endpoint add the item(s) into group related to a user.
        User needs to provide a group unique id, client updated time stamp and a list of item ids.
        Endpoint will throw an error on invalid item(s) or group unique id in the request.
        User can not add item(s) into shared my group.
        Client updated time stamp will validate less than current time stamp.
        Asset ids list will also filter with basic validations as in Active, Hidden etc.
        When user add folder id as a item id, only folder will be added if group is favorite. Otherwise all child asset(s) will be added(exclude folder(s)).
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: AddGroupItems
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: itemGroupDetails
          description: The item ids.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemGroupRequestDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '201':
          description: The created group item.
          schema:
            type: array
            items:
              $ref: '#/definitions/ItemGroupResponseDto'
        '400':
          description: Thrown on when add item(s) to not own shared my groups.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: Thrown if groups do not exist for the current user.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    delete:
      summary: Delete Group Items
      description: |
        This endpoint delete item(s) from the group related to a user. 
        User needs to provide a group unique id and list of item ids, 'isdeleteall'(optional query parameter). 
        Endpoint will throw an error on invalid item(s) or item(s) not exist in the group or group unique id in the request.
        User can not delete item(s) from shared my group.
        'isdeleteall' default value is false. 
        List of item ids not allowed if 'isdeleteall' value is false and user must put the list of item ids if 'isdeleteall' is true.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: DeleteGroupItems
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: isDeleteAll
          description: Should delete all items.
          in: query
          required: false
          type: integer
          format: int32
          maximum: 1
          minimum: 0
        - name: itemIds
          description: Item ids to be deleted.
          in: query
          required: false
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: Successfully Deleted Message.
          schema:
            $ref: '#/definitions/successMesage'
        '400':
          description: Thrown if a parameter is invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: Thrown if delete item(s) from not own shared my groups.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/UpdateOrder':
    post:
      summary: Update Groups Order
      description: Updates the order of the groups.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: UpdateGroupsOrder
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupsRequest
          description: List of group ids.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupSortRequestDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The updated group id order.
          schema:
            type: array
            items:
              type: string
              enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973, 50410c14-c6b2-46e5-b24b-c801eee4fe69, 44a2cd69-25bb-41b5-9148-af88c4cc4e64, 40ce5475-89c1-4a74-bdf0-5862320ea144, fb65cb34-4131-417b-9621-89ccab884ee5]
              uniqueItems: true
        '400':
          description: Thrown if a parameter is invalid or the group list does not match the existing group list.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{id}/Items/UpdateOrder':
    post:
      summary: Update Group Items Order
      description: Updates the order of the assets with the provided ids to the group with the provided id.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: UpdateItemsOrder
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: id
          description: The group id.
          in: path
          required: true
          type: integer
          format: int32
          maximum: 1000
          minimum: 1
        - name: data
          description: The item ids.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemGroupSortRequestDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The updated group item.
          schema:
            type: array
            items:
              format: int32
              type: integer
              maximum: 1000
              minimum: 1
              uniqueItems: true
            minimum: 3
        '400':
          description: Thrown if a parameter is invalid.
          schema:
            $ref: '#/definitions/ErrorDto'
        '404':
          description: Thrown if no group items found for the specified group unique id.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/Favorites':
    get:
      summary: Get Favourite Group
      description: This end point retrieve user's favorite group information which is created for particular user.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetFavouriteGroup
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The user's favourite group.
          schema:
            $ref: '#/definitions/GroupResponseDto'
      deprecated: false
  '/api/{version}/Groups/QuickGroup':
    get:
      summary: Get Quick Groups
      description: This end point retrieve user's quick group information which is created for particular user.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: GetQuickGroup
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The user's quick groups.
          schema:
            type: array
            items:
              $ref: '#/definitions/GroupResponseDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}/Shared':
    post:
      summary: Create Shared Group
      description: | 
        The endpoint share the given group to the comunity, if the user's allow to share groups setting is enabled.
        Any other user having common items shared in the group, will see the shared group.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: CreateSharedGroup
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: data
          description: The shared group data.
          in: body
          required: true
          schema:
            $ref: '#/definitions/shareGroupRequestDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The created shared group.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: |
            Thrown if a parameter is invalid or the requests contains group not owned by the user or invalid group unique id
            or the user not allowed to share groups or no valid items associated to the group.
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: Thrown if the group sharing feature is not enabled for the organization.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
    put:
      summary: Remove Shared Group
      description: |
        The endpoint removes a shared group from the comunity. If group share removed, a new group will be created with the same group name. 
        And the unshared group will disappeared from other users shared group and from the users who consumed that group.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: RemoveSharedGroup
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: data
          description: The shared group data.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupBaseDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The newly createdunshared group.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: |
            Thrown if a parameter is invalid or the requests contains group not owned by the user or invalid group unique id or the user not allowed to share groups.
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: Thrown if the group sharing feature is not enabled for the organization.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}/Consume':
    post:
      summary: Consume Shared Group
      description: |
        The endpoing consumes a shared group and make it as a shared my group. 
        If a group consumed, a new group will be created and a relashanship with the parent group will be created as a group setting,
        with the setting name 'parentGroup' and value as the parent group unique id.
        If the parent group user unshared the group, shared my group also will be disappeared.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: ConsumeSharedGroup
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: data
          description: The consumed my shared group.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupBaseDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The consumed shared my group.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: |
            Thrown if a parameter is invalid or the requests contains group not owned by the user or invalid group unique id or the user not allowed to share groups.
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: Thrown if the group sharing feature is not enabled for the organization.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
  '/api/{version}/Groups/{groupUniqueId}/Convert':
    post:
      summary: Convert My Shared Group
      description: | 
        The endpoing converts a my shared group to a my group. When a my shared group converted, 
        the parent group relationship will removed and the common items in the parent group will added to the converted group.
      security:
        - Bearer: []
      tags:
        - Groups
      operationId: ConvertSharedGroup
      consumes: 
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: version
          description: The API version to be used to get the data.
          in: path
          required: true
          type: string
        - name: groupUniqueId
          description: The group unique id.
          in: path
          required: true
          type: string
        - name: data
          description: The my shared group data.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupBaseDto'
        - name: Authorization
          type: string
          in: header
          required: true
      responses:
        '200':
          description: The converted my group.
          schema:
            $ref: '#/definitions/GroupResponseDto'
        '400':
          description: |
            Thrown if a parameter is invalid or the requests contains group not owned by the user or invalid group unique id or the user not allowed to share groups.
          schema:
            $ref: '#/definitions/ErrorDto'
        '403':
          description: Thrown if the group sharing feature is not enabled for the organization.
          schema:
            $ref: '#/definitions/ErrorDto'
      deprecated: false
      
definitions:
  OrganizationSettingsRequestDto:
    type: object
    required:
      - Keys
    properties:
      Keys:
        type: array
        items:
          type: string
  SegmentIdDto:
    type: object
    required:
      - SegmentIds
    properties:
      SegmentIds:
        type: array
        items:
          type: integer
          maximum: 1000
          minimum: 1
          uniqueItems: true
  OAuthCode:
    type: object
    required:
      - code
      - clientId
      - redirectUri
    properties:
      code:
        type: string
        enum: [sortr5d8dz5xgx0deg17, zpn6ti1sxeoo9nc0kd1x, h5dsvkl4ekr76vxwd7a7, 3d4bu76plmh0cxek9jms, jbli43tel7murr9djoua]
      clientId:
        type: string
        enum: [jevhl92wnastdx12zben, buixpiwb2xaxdwd39phc, u55wtf84x8qzl7fpzkv1, dpe2atsrv8wdkbe0co5i, lmqh922ehmltnpgi5a0l]
      redirectUri:
        type: string
        enum: [https://imsmart-staging-webclient.comparenetworks.com]
  ErrorDto:
    type: object
    required:
      - TraceId
      - Message
    properties:
      TraceId:
        type: string
        enum: [swt509]
      Message:
        type: string
        enum: [Error Occurred]
  AuthDto:
    type: object
    required:
      - token
    properties:
      token:
        type: string
        enum: [eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6Imltc21hcnRAY2FsY2V5LmNvbSIsImN1cnJlbnR1c2VyLXR5cGUiOiJTeXN0ZW1BZG1pbiIsIm9yZ2FuaXphdGlvbl9jb2RlIjoibWFjcy1kZW1vIiwiYXBwbGljYXRpb25fc3ViZG9tYWluIjoiaW1zbWFydC1zdGFnaW5nIiwiYXBwbGljYXRpb25fZG9tYWluIjoiaW1zbWFydC1zdGFnaW5nLmNvbXBhcmVuZXR3b3Jrcy5jb20iLCJhcHBsaWNhdGlvbl9hcGlfYWxpYXMiOiJXZWJDbGllbnRBcGkiLCJhcHBsaWNhdGlvbl9zY2hlbWUiOiJodHRwcyIsImFwcGxpY2F0aW9uX3BvcnQiOiI0NDMiLCJpc3MiOiJpbXNtYXJ0LXN0YWdpbmcuY29tcGFyZW5ldHdvcmtzLmNvbSIsImF1ZCI6Imltc21hcnQtc3RhZ2luZyIsImV4cCI6MTQ5OTE4MDgxMiwibmJmIjoxNDk5MTUyMDEyfQ.pGK2SPpGcFOMQUEohyQjiTM6IrPfmUmQsxDvoJK4cVU]
  ItemDto:
    type: object
    required:
      - ItemId
      - Title
      - FeaturedTitle
      - ItemUniqueIdentifier
      - Size
      - OrganizationId
      - ContentModified
      - IsReady
      - ExpireDate
      - FileType
      - Active
      - Shareable
      - Description
      - ItemType
      - Created
      - Modified
      - HasLargeImage
      - HasSmallImage
      - HasIconImage
      - PartNo
      - Keyword
      - AssetUrl
      - AlternateShareUrl
      - Checksum
      - LargeImageChecksum
      - SmallImageChecksum
      - IconImageChecksum
      - RootLevelFolder
      - HasLink
      - ImageModified
      - ShowBlackBar
      - ShowDescription
      - KeyBenefit
      - BannerImageChecksum
      - HasBannerImage
      - CrocodocUuid
      - IconImageName
      - SmallImageName
      - LargeImageName
      - BannerImageName
      - FileStorageName
      - AlternateFileStorageName
      - HasAlternateFile
      - IsExternal
      - HTML5Enabled
    properties:
      ItemId:
        format: int32
        type: integer
        minimum: 10
        maximum: 100
      Title:
        type: string
        enum: [Mock Item A, Mock Item B, Mock Item C, Mock Item D, Mock Item E]
      FeaturedTitle:
        type: string
        enum: [Mock Item A Featured Title, Mock Item B Featured Title, Mock Item C Featured Title, Mock Item D Featured Title, Mock Item E Featured Title]
      ItemUniqueIdentifier:
        type: string
        enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973, 50410c14-c6b2-46e5-b24b-c801eee4fe69, 44a2cd69-25bb-41b5-9148-af88c4cc4e64, 40ce5475-89c1-4a74-bdf0-5862320ea144, fb65cb34-4131-417b-9621-89ccab884ee5]
      Size:
        format: int32
        type: integer
        minimum: 10
        maximum: 100000
      OrganizationId:
        format: int32
        type: integer
        minimum: 1
        maximum: 20
      ContentModified:
        format: date-time
        type: string
      IsReady:
        type: boolean
        enum: [true, false]
      ExpireDate:
        format: date-time
        type: string
      FileType:
        type: string
        enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
      Active:
        type: boolean
        enum: [true, false]
      Shareable:
        type: boolean
        enum: [true, false]
      Description:
        type: string
        enum: [Mock Item A Description, Mock Item B Description, Mock Item C Description, Mock Item D Description, Mock Item E Description]
      ItemType:
        format: int32
        type: integer
        minimum: 1
        maximum: 4
      Created:
        format: date-time
        type: string
      Modified:
        format: date-time
        type: string
      HasLargeImage:
        type: boolean
        enum: [true, false]
      HasSmallImage:
        type: boolean
        enum: [true, false]
      HasIconImage:
        type: boolean
        enum: [true, false]
      PartNo:
        type: string
        enum: [Item Part Number]
      Keyword:
        type: string
        enum: [Mock Item A Keyword, Mock Item B Keyword, Mock Item C Keyword, Mock Item D Keyword, Mock Item E Keyword]
      AssetUrl:
        type: string
        enum: [http://www.mockdata.com/a, http://www.mockdata.com/b, http://www.mockdata.com/c, http://www.mockdata.com/d, http://www.mockdata.com/e]
      AlternateShareUrl:
        type: string
        enum: [http://www.sharedata.com/a, http://www.sharedata.com/b, http://www.sharedata.com/c, http://www.sharedata.com/d, http://www.sharedata.com/e]
      Checksum:
        type: string
        enum: [vv9e8jo9henpi2owu8l8, k1qc11huyhu5ocp31a2q, zv5lpsph6yn99w7qide7, 0t1byx20cv38dvm8u2eg, a5j4gr6b5pppk58feqrx]
      LargeImageChecksum:
        type: string
        enum: [wo99rr6v92t2o1k2yp6n, kuhdl9bw5sgc78cgoe6l, 9xpz7yfudg6duwe57rc2, i6anceseb7ir9q6hnuvd, p28en0aopozd9jvrubql]
      SmallImageChecksum:
        type: string
        enum: [rkf12i6vudle4jgx0x91, wqb2zs50tliavz71umh4, 2lmllifi8moy48ipu0x1, ez7wmkllboawzd69s8c4, jcthp0e1ke23t0loefn5]
      IconImageChecksum:
        type: string
        enum: [irc3pah6l76t549luoip, wll5qy7vw28x9heriu5k, f4tv83khr6nrd80fuu21, 6pcounor02xmitgfranc, 3ew8a606p0z5r77tsl2w]
      RootLevelFolder:
        type: boolean
        enum: [true]
      HasLink:
        type: boolean
        enum: [true]
      ImageModified:
        format: date-time
        type: string
      ShowBlackBar:
        type: boolean
        enum: [true]
      ShowDescription:
        type: boolean
        enum: [true]
      KeyBenefit:
        format: date-time
        type: string
      BannerImageChecksum:
        type: string
        enum: [esz0dhgbaf4hqyqb1bcd, 8awloag2yvrf4fq8zmmq, biya1au39qq0tqjkwb5m, a52f58tarongcuewwbb5, 5t54oky9uyonpqd9tb8b]
      HasBannerImage:
        type: boolean
        enum: [true]
      CrocodocUuid:
        type: string
        enum: [a25f5f4d-0ecd-4b3c-b62b-5ce9a1622b55, 39a6780a-40e9-480e-95c1-871eef264b0b, b2cf4d64-1c26-4054-b184-7c63c25645dc, dd196595-7d85-4b00-b2db-7d3f1f381562, b83e5746-d25e-407f-a8cd-b80ba6f0b729]
      IconImageName:
        type: string
        enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973_icon, 50410c14-c6b2-46e5-b24b-c801eee4fe69_icon, 44a2cd69-25bb-41b5-9148-af88c4cc4e64_icon, 40ce5475-89c1-4a74-bdf0-5862320ea144_icon, fb65cb34-4131-417b-9621-89ccab884ee5_icon]
      SmallImageName:
        type: string
        enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973_small, 50410c14-c6b2-46e5-b24b-c801eee4fe69_small, 44a2cd69-25bb-41b5-9148-af88c4cc4e64_small, 40ce5475-89c1-4a74-bdf0-5862320ea144_small, fb65cb34-4131-417b-9621-89ccab884ee5_small]
      LargeImageName:
        type: string
        enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973_large, 50410c14-c6b2-46e5-b24b-c801eee4fe69_large, 44a2cd69-25bb-41b5-9148-af88c4cc4e64_large, 40ce5475-89c1-4a74-bdf0-5862320ea144_large, fb65cb34-4131-417b-9621-89ccab884ee5_large]
      BannerImageName:
        type: string
        enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973_banner, 50410c14-c6b2-46e5-b24b-c801eee4fe69_banner, 44a2cd69-25bb-41b5-9148-af88c4cc4e64_banner, 40ce5475-89c1-4a74-bdf0-5862320ea144_banner, fb65cb34-4131-417b-9621-89ccab884ee5_banner]
      FileStorageName:
        type: string
        enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973, 50410c14-c6b2-46e5-b24b-c801eee4fe69, 44a2cd69-25bb-41b5-9148-af88c4cc4e64, 40ce5475-89c1-4a74-bdf0-5862320ea144, fb65cb34-4131-417b-9621-89ccab884ee5]
      AlternateFileStorageName:
        type: string
        enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973_alternate, 50410c14-c6b2-46e5-b24b-c801eee4fe69_alternate, 44a2cd69-25bb-41b5-9148-af88c4cc4e64_alternate, 40ce5475-89c1-4a74-bdf0-5862320ea144_alternate, fb65cb34-4131-417b-9621-89ccab884ee5_alternate]
      HasAlternateFile:
        type: boolean
        enum: [true]
      IsExternal:
        type: boolean
        enum: [true]
      HTML5Enabled:
        type: boolean
        enum: [true]
  ItemLinkDto:
    type: object
    required:
      - MainFile
      - AlternateFile
      - LargeImage
      - BannerImage
      - SmallImage
      - IconImage
      - SquareLargeImage
      - OneThirdImage
      - TwoThirdImage
      - FeaturedLargeImage
      - SkinnyImage
      - FatImage
      - FullScreenImage
    properties:
      MainFile:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      AlternateFile:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_alternate?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      LargeImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_large?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      BannerImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_banner?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      SmallImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_small?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      IconImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_icon?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      SquareLargeImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_squarelarge?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      OneThirdImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_onethird?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      TwoThirdImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_twothird?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      FeaturedLargeImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_featurelarge?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      SkinnyImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_skinny?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      FatImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_fat?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
      FullScreenImage:
        type: string
        enum: [https://s3.amazonaws.com/<BucketName>/<VerticalPrefix>/data/<ItemUniqueID(UUID)>_fullscreen?AWSAccessKeyId=<AccessKey>&Expires=<Expire>&Signature=<Signature>]
  AccessibilityStatus:
    type: object
    required:
      - IsAccessible
    properties:
      IsAccessible:
        type: boolean
        enum: [true]
  ItemCollection:
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ItemUserDataDto'
    minItems: 1
    uniqueItems: true
  ItemUserDataDto:
    type: object
    required:
      - userId
      - modifiedDate
      - privacy
      - value
      - appCode
      - name
      - uniqueId
    properties:
      userId:
        format: int32
        type: integer
        minimum: 100
        maximum: 1000
      modifiedDate:
        format: int64
        type: integer
      privacy:
        format: int32
        type: integer
        minimum: 0
        maximum: 1
      value:
        type: string
        enum: [, {"activity":"Report Genarated","value":"practiceBuilder","type":"report","name":"Alexander The Great"}, {"id":58,"name":"John Doe","jobtitle":"Sr. JOE","email":"john.doe@email.com","phone":"(123) 456-7890","therapeuticarea":"therapeuticarea","therapeuticsubarea":"therapeuticsubarea","city":"city","state":"state","professionalexperience":"professionalexperience","teamleads":"teamleads","territorystates":"territorystates","expertisearea":"expertisearea","fmtleadfor":"fmtleadfor","education":"education","hobbies":"hobbies","professionalinterests":"professionalinterests","molecule":"molecule","manager":"manager","profileimg":"profileimg.jpg"}]
      appCode:
        type: string
        enum: [App Code A, App Code B, App Code C, App Code D, App Code E]
      name:
        type: string
        enum: [Name A, Name B, Name C, Name D, Name E]
      uniqueId:
        type: string
        enum: [i9m11y0a2xo2kx3rio1n, ary1rh8qtgiyalgnlf5b, yafucqxnufctu5ac9r8d, j4w1xiz2xytdu0ik2uol, xd5z8hnmgqbusfzasqdw]
  OrganizationDetails:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        enum: [Organization A, Organization B, Organization C, Organization D, Organization E]
  ItemCrocodocSessionDto:
    type: object
    required:
      - Uuid
      - Session
      - Status
      - Viewable
      - Error
    properties:
      Uuid:
        type: string
        enum: [a061a450-608d-11e7-907b-a6006ad3dba0]
      Session:
        type: string
        enum: [5ARHVtko5ouhylU_2Z_Uv0aMw5JvhYckfRH2gHPNQX_c4uL4F3MBZ9PgeQRmW13tUMc-w1Z-bRv5nQuMl28kAZYJEnfdQmpQKs4-3xNMn9F0jND0YWh_C2xqRczt]
      Status:
        type: string
        enum: [DONE]
      Viewable:
        type: boolean
        enum: [true]
      Error:
        type: string
  ItemDownloadLinkDto:
    type: object
    required:
      - ItemId
      - AssetTitle
      - AllowToEmail
      - Shareable
      - AssetLink
      - ExpiryDate
    properties:
      ItemId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      AssetLink:
        type: string
        enum: [https://<VerticalSubdomain>.comparenetworks.com/Files?id=1234&ts=1499131806&sig=gRZd0f65dIAmxYPhlNPUlhpH3sw%3d]
      AssetTitle:
        type: string
        enum: [Mock Item]
      ExpiryDate:
        format: date-time
        type: string
      AllowToEmail:
        type: boolean
        enum: [true]
      Shareable:
        type: boolean
        enum: [true]
  ItemFilterCategoryDto:
    type: object
    required:
      - TagGroups
      - FileTypes
    properties:
      TagGroups:
        type: array
        items:
          $ref: '#/definitions/ItemFilterTagGroupDto'
      FileTypes:
        type: array
        items:
          $ref: '#/definitions/ItemFilterFileTypeDto'
    minItems: 1
    uniqueItems: true
  ItemFilterFileTypeDto:
    type: object
    required:
      - FileType
      - FileTypeId
      - FileFormats
    properties:
      FileType:
        type: string
        enum: [Video, Image, Pdf, Link, Audio]
      FileTypeId:
        format: int32
        type: integer
        maximum: 120
        minimum: 1
      FileFormats:
        type: array
        items:
          type: string
          enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
    minItems: 1
    uniqueItems: true
  ItemFilterTagGroupDto:
    type: object
    required:
      - TagGroupName
      - Tags
    properties:
      TagGroupName:
        type: string
        enum: [Tag Group A, Tag Group B, Tag Group C, Tag Group D, Tag Group E]
      Tags:
        type: array
        items:
          $ref: '#/definitions/ItemFilterTagDto'
  ItemFilterTagDto:
    type: object
    required:
      - TagName
      - TagId
    properties:
      TagName:
        type: string
        enum: [Tag A, Tag B  , Tag C, Tag D, Tag E]
      TagId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
  WebClientItemDto:
    type: object
    required:
      - Items
      - Total
    properties:
      Items:
        type: array
        items:
          $ref: '#/definitions/ItemDto'
      Total:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
  ItemRelatedDto:
    type: object
    required:
      - Items
      - ItemToItems
      - ItemSpecificationValues
      - ItemCustomProperties
      - ItemSettings
    properties:
      Items:
        type: array
        items:
          $ref: '#/definitions/ItemDto'
      ItemToItems:
        type: array
        items:
          $ref: '#/definitions/ItemToItemDto'
      ItemSpecificationValues:
        type: array
        items:
          $ref: '#/definitions/ItemSpecificationValueDto'
      ItemCustomProperties:
        type: array
        items:
          $ref: '#/definitions/ItemCustomPropertyDto'
      ItemSettings:
        type: array
        items:
          $ref: '#/definitions/ItemSettingDto'
    minItems: 1
    uniqueItems: true
  ItemToItemDto:
    type: object
    required:
      - ChildId
      - ParentId
      - SortOrder
      - SegmentId
      - Created
      - Modified
    properties:
      ChildId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      ParentId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      SortOrder:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      SegmentId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      Created:
        format: date-time
        type: string
      Modified:
        format: date-time
        type: string
    minItems: 1
    uniqueItems: true
  ItemSpecificationValueDto:
    type: object
    required:
      - ItemId
      - SpecificationValueId
      - Created
      - Modified
    properties:
      ItemId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      SpecificationValueId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      Created:
        format: date-time
        type: string
      Modified:
        format: date-time
        type: string
    minItems: 1
    uniqueItems: true
  ItemCustomPropertyDto:
    type: object
    required:
      - ItemId
      - CustomPropertyId
      - Value
      - Created
      - Modified
    properties:
      ItemId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      CustomPropertyId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      Value:
        type: string
      Created:
        format: date-time
        type: string
      Modified:
        format: date-time
        type: string
    minItems: 1
    uniqueItems: true
  ItemSettingDto:
    type: object
    required:
      - ItemSettingId
      - ItemId
      - Name
      - Value
      - Created
      - Modified
    properties:
      ItemSettingId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      ItemId:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      Name:
        type: string
        enum: [Setting Name A, Setting Name B, Setting Name C, Setting Name D, Setting Name E]
      Value:
        type: string
        enum: [Setting Value A, Setting Value B, Setting Value C, Setting Value D, Setting Value E]
      Created:
        format: date-time
        type: string
      Modified:
        format: date-time
        type: string
    minItems: 1
    uniqueItems: true
  ItemSearchDto:
    type: object
    required:
      - ParentIds
      - FileTypes
      - Tags
      - SearchText
      - StartIndex
      - PageSize
      - SortBy
      - SortOrder
    properties:
      ParentIds:
        type: array
        items:
          type: integer
          enum: [100, 101, 102, 103, 104, 105]
      FileTypes:
        type: array
        items:
          type: string
          enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
      Tags:
        type: array
        items:
          type: integer
          enum: [1, 2, 3, 4, 5]
          uniqueItems: true
      SearchText:
        type: string
        enum: [Search Text]
      StartIndex:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      PageSize:
        format: int32
        type: integer
        maximum: 100
        minimum: 1
      SortBy:
        type: string
        enum: [Title, Size, Created, Modified, FeaturedTitle]
      SortOrder:
        type: string
        enum: [Asce, Desc]
    minItems: 1
    uniqueItems: true
  ItemFiltersDto:
    type: object
    required:
      - FileTypes
      - Tags
      - ShowFolder
      - StartIndex
      - PageSize
      - SortBy
      - SortOrder
    properties:
      FileTypes:
        type: array
        items:
          type: string
          enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
      Tags:
        type: array
        items:
          type: integer
          enum: [1, 2, 3, 4, 5]
          uniqueItems: true
      ShowFolder:
        type: boolean
        enum: [true, false]
      StartIndex:
        format: int32
        type: integer
        maximum: 1000
        minimum: 1
      PageSize:
        format: int32
        type: integer
        maximum: 100
        minimum: 1
      SortBy:
        type: string
        enum: [Title, Size, Created, Modified, FeaturedTitle]
      SortOrder:
        type: string
        enum: [Asce, Desc]
    minItems: 1
    uniqueItems: true
  GroupDto:
    type: object
    required:
      - Name
      - ClientUpdatedTimestamp
    properties:
      Name:
        type: string
        enum: [Group 1, Group 2, Group 3, Group 4, Group 5, Group 6, Group 7]
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
  GroupTypesDto:
    type: object
    required:
      - groupTypes
      - DisablePaginate
      - Offset
      - Limit
    properties:
      groupTypes:
        type: string
      DisablePaginate:
        type: integer
        format: int32
        maximum: 1
        minimum: 0
      Offset:
        type: integer
        format: int32
        maximum: 2147483647
        minimum: 0
      Limit:
        type: integer
        format: int32
        maximum: 2147483647
        minimum: 1
  GroupSortRequestDto:
    type: object
    required:
      - Groups
      - ClientUpdatedTimestamp
    properties:
      Groups:
        type: array
        items:
          type: string
          enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973, 50410c14-c6b2-46e5-b24b-c801eee4fe69, 44a2cd69-25bb-41b5-9148-af88c4cc4e64, 40ce5475-89c1-4a74-bdf0-5862320ea144, fb65cb34-4131-417b-9621-89ccab884ee5]
        uniqueItems: true
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
  ItemGroupSortRequestDto:
    type: object
    required:
      - GroupItems
      - ClientUpdatedTimestamp
    properties:
      GroupItems:
        type: array
        items:
          type: integer
          format: int32
      ClientUpdatedTimestamp:
        type: integer
        format: int64
  ItemGroupRequestDto:
    type: object
    required:
      - ItemIds
      - ClientUpdatedTimestamp
    properties:
      ItemIds:
        type: array
        items:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
  PaginationRequestDto:
    type: object
    required:
      - DisablePaginate
      - Offset
      - Limit
    properties:
      DisablePaginate:
        type: integer
        format: int32
        maximum: 1
        minimum: 0
      Offset:
        type: integer
        format: int32
        maximum: 100
        minimum: 0
      Limit:
        type: integer
        format: int32
        maximum: 100
        minimum: 1
  ItemGroupRequestBaseDto:
    type: object
    required:
      - DeleteAll
      - ItemIds
    properties:
      DeleteAll:
        type: boolean
        enum: [true, false]
      ItemIds:
        type: array
        items:
          type: integer
          format: int32
  GroupBaseDto:
    type: object
    required:
      - ClientUpdatedTimestamp
    properties:
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
  shareGroupRequestDto:
    type: object
    required:
      - ClientUpdatedTimestamp
    properties:
      GroupDescription:
        type: string
        enum: [Group description 1, Group description 2, Group description 3, Group description 4, Group description 5, Group description 6, Group description 7]
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
  GroupResponseDto:
    type: object
    required:
      - GroupUniqueId
      - Name
      - GroupOrder
      - UserId
      - GroupType
      - ClientUpdatedTimestamp
      - ServerUpdatedTimestamp
      - Created
      - Modified
      - OwnerName
    properties:
      GroupUniqueId:
        type: string
        enum: [DD6B6CDD-43CE-4B97-8255-0000B1B8E748, DD6B6CDD-43CE-4B97-8255-0000B1B8E749, DD6B6CDD-43CE-4B97-8255-0000B1B8E720, E39B624E-FB67-4DC1-B869-60BFF0EC1B8A, AS6B6CDD-43CE-4B97-8255-0000B1C8E748, PQ6B6CDD-43CE-4B97-8255-0000B1C8E748]
      Name:
        type: string
        enum: [Group 1, Group 2, Group 3, Group 4, Group 5, Group 6, Group 7]
      GroupOrder:
        format: int32
        type: integer
        enum: [512, 1024, 1536, 2048, 2560]
      UserId:
        format: int32
        type: integer
        maximum: 10000
        minimum: 1000
      GroupType:
        type: string
        enum: [0, 1, 2, 3, 4]
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
      ServerUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
      Modified:
        format: date-time
        type: string
      Created:
        format: date-time
        type: string
      OwnerName:
        type: string
        enum: [User 1, User 2, User 3, User 4, User 5, User 6, User 7]
  ItemGroupResponseDto:
    type: object
    required:
      - ItemId
      - ItemOrder
      - Created
      - Modified
      - ClientUpdatedTimestamp
      - ServerUpdatedTimestamp
      - Item
    properties:
      UniqueId:
        type: string
        enum: [DD6B6CDD-43CE-4B97-8255-0000B1B8E748, DD6B6CDD-43CE-4B97-8255-0000B1B8E749, DD6B6CDD-43CE-4B97-8255-0000B1B8E720, E39B624E-FB67-4DC1-B869-60BFF0EC1B8A, AS6B6CDD-43CE-4B97-8255-0000B1C8E748, PQ6B6CDD-43CE-4B97-8255-0000B1C8E748]
      GroupUniqueId:
        type: string
        enum: [E39B624E-FB67-4DC1-B869-60BFF0EC1B8A, DD6B6CDD-43CE-4B97-8255-0000B1B8E748, ED6B6CDD-43CE-4B97-8255-0000B1B8E741, DD6B6CDD-43CE-4B97-8255-0000B1B8E720, CD6B6CDD-43CE-4B97-8255-0000B1B8E748, DD6B6CDD-43CE-4B97-8255-0000B1B8E749]
      ItemId:
        format: int32
        type: integer
        maximum: 100
        minimum: 1
      ItemOrder:
        format: int32
        type: integer
        maximum: 100
        minimum: 1
      Modified:
        format: date-time
        type: string
      Created:
        format: date-time
        type: string
      ClientUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
      ServerUpdatedTimestamp:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
      Item:
        $ref: '#/definitions/ItemBaseDto'
  ItemGroupPaginatedResponseDto:
    required:
      - GroupItems
      - Total
    properties:
      GroupItems:
        type: array
        items:
          $ref: '#/definitions/ItemGroupResponseDto'
      Total:
        type: integer
        format: int64
        maximum: 2147483647
        minimum: 1
  WebClientGroupDto:
    required:
      - Groups
      - Total
    properties:
      Groups:
        type: array
        items:
          $ref: '#/definitions/GroupResponseDto'
      Total:
        type: integer
        format: int32
        maximum: 2147483647
        minimum: 0
  successMesage:
    type: object
    required:
      - Message
    properties:
      Message:
        type: string
        enum: [Successfully Deleted.]
  ItemBaseDto:
    type: object
    required:
      - ItemId
      - ItemType
      - FileType
      - Title
      - Description
      - IconImageName
      - IsFavorite
    properties:
      ItemId:
        format: int32
        type: integer
        minimum: 10
        maximum: 100
      Title:
        type: string
        enum: [Mock Item A, Mock Item B, Mock Item C, Mock Item D, Mock Item E]
      ItemType:
        format: int32
        type: integer
        minimum: 1
        maximum: 4
      FileType:
        type: string
        enum: [mp4, mpv, 3gp, mov, m4v, flv, mp3, m4a, m4r, au, wav, bmp, gif, tif, png, jpg, jpeg, xlsx, xlsm, xlsb, xls, xlm pps, pptx, ppt,csv, pdf, txt, key, epub, ibooks]
      IconImageName:
        type: string
        enum: [0e72f8f7-324d-440e-ae08-f2a4c331a973_icon, 50410c14-c6b2-46e5-b24b-c801eee4fe69_icon, 44a2cd69-25bb-41b5-9148-af88c4cc4e64_icon, 40ce5475-89c1-4a74-bdf0-5862320ea144_icon, fb65cb34-4131-417b-9621-89ccab884ee5_icon]
      IsFavorite:
        type: boolean
        enum: [true, false]
      Description:
        type: string
        enum: [Mock Item A Description, Mock Item B Description, Mock Item C Description, Mock Item D Description, Mock Item E Description]
  ItemShareLinkCollectionDto:
    required:
      - ItemDownloadLinks
    properties:
      ItemDownloadLinks:
        type: array
        items:
          $ref: '#/definitions/ItemDownloadLinkDto'
  ItemLinkCollectionDto:
    required:
      - ItemLinks
    properties:
      ItemLinks:
        type: array
        items:
          $ref: '#/definitions/ItemLinkExtendedDto'
  ItemLinkExtendedDto:
    required:
      - ItemId
    allOf:
      - $ref: '#/definitions/ItemLinkDto'
      - properties:
          ItemId:
            format: int32
            type: integer
            minimum: 10
            maximum: 100